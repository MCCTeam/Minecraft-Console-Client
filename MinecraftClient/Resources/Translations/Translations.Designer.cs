//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MinecraftClient {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Translations {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Translations() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MinecraftClient.Resources.Translations.Translations", typeof(Translations).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weather change: It is no longer raining..
        /// </summary>
        internal static string bot_alerts_end_rain {
            get {
                return ResourceManager.GetString("bot.alerts.end_rain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weather change: It is no longer a thunderstorm..
        /// </summary>
        internal static string bot_alerts_end_thunderstorm {
            get {
                return ResourceManager.GetString("bot.alerts.end_thunderstorm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weather change: It is raining now..
        /// </summary>
        internal static string bot_alerts_start_rain {
            get {
                return ResourceManager.GetString("bot.alerts.start_rain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weather change: It is a thunderstorm..
        /// </summary>
        internal static string bot_alerts_start_thunderstorm {
            get {
                return ResourceManager.GetString("bot.alerts.start_thunderstorm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid walk range provided, must be a positive integer greater than 0, using default value of 5!.
        /// </summary>
        internal static string bot_antiafk_invalid_walk_range {
            get {
                return ResourceManager.GetString("bot.antiafk.invalid_walk_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot movement lock is held by bot {0}, so the Anti AFK bot might not move!.
        /// </summary>
        internal static string bot_antiafk_may_not_move {
            get {
                return ResourceManager.GetString("bot.antiafk.may.not.move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The terrain handling is not enabled in the settings of the client, enable it if you want to use it with this bot. Using alternative (command) method..
        /// </summary>
        internal static string bot_antiafk_not_using_terrain_handling {
            get {
                return ResourceManager.GetString("bot.antiafk.not_using_terrain_handling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The time range begins with a bigger value, swapped them around..
        /// </summary>
        internal static string bot_antiafk_swapping {
            get {
                return ResourceManager.GetString("bot.antiafk.swapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attack cooldown value cannot be smaller than 0..
        /// </summary>
        internal static string bot_autoAttack_invalidcooldown {
            get {
                return ResourceManager.GetString("bot.autoAttack.invalidcooldown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crafting aborted! Check your available materials..
        /// </summary>
        internal static string bot_autoCraft_aborted {
            get {
                return ResourceManager.GetString("bot.autoCraft.aborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-crafting ChatBot command alias.
        /// </summary>
        internal static string bot_autoCraft_alias {
            get {
                return ResourceManager.GetString("bot.autoCraft.alias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available commands: {0}. Use /autocraft help &lt;cmd name&gt; for more information..
        /// </summary>
        internal static string bot_autoCraft_available_cmd {
            get {
                return ResourceManager.GetString("bot.autoCraft.available_cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory #{0} was closed by AutoCraft.
        /// </summary>
        internal static string bot_autoCraft_close_inventory {
            get {
                return ResourceManager.GetString("bot.autoCraft.close_inventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-crafting ChatBot command.
        /// </summary>
        internal static string bot_autoCraft_cmd {
            get {
                return ResourceManager.GetString("bot.autoCraft.cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total {0} recipes loaded: {1}.
        /// </summary>
        internal static string bot_autoCraft_cmd_list {
            get {
                return ResourceManager.GetString("bot.autoCraft.cmd.list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crafting failed! Waiting for more materials.
        /// </summary>
        internal static string bot_autoCraft_craft_fail {
            get {
                return ResourceManager.GetString("bot.autoCraft.craft_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate recipe name specified: {0}.
        /// </summary>
        internal static string bot_autoCraft_exception_duplicate {
            get {
                return ResourceManager.GetString("bot.autoCraft.exception.duplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing recipe name while parsing a recipe.
        /// </summary>
        internal static string bot_autoCraft_exception_name_miss {
            get {
                return ResourceManager.GetString("bot.autoCraft.exception.name_miss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the command description. Usage: /autocraft help &lt;command name&gt;.
        /// </summary>
        internal static string bot_autoCraft_help_help {
            get {
                return ResourceManager.GetString("bot.autoCraft.help.help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List available recipes..
        /// </summary>
        internal static string bot_autoCraft_help_list {
            get {
                return ResourceManager.GetString("bot.autoCraft.help.list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load the config file..
        /// </summary>
        internal static string bot_autoCraft_help_load {
            get {
                return ResourceManager.GetString("bot.autoCraft.help.load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reload the config file..
        /// </summary>
        internal static string bot_autoCraft_help_reload {
            get {
                return ResourceManager.GetString("bot.autoCraft.help.reload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write the default example config to default location..
        /// </summary>
        internal static string bot_autoCraft_help_resetcfg {
            get {
                return ResourceManager.GetString("bot.autoCraft.help.resetcfg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start the crafting. Usage: /autocraft start &lt;recipe name&gt;.
        /// </summary>
        internal static string bot_autoCraft_help_start {
            get {
                return ResourceManager.GetString("bot.autoCraft.help.start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop the current running crafting process.
        /// </summary>
        internal static string bot_autoCraft_help_stop {
            get {
                return ResourceManager.GetString("bot.autoCraft.help.stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid result item!.
        /// </summary>
        internal static string bot_autocraft_invaild_result {
            get {
                return ResourceManager.GetString("bot.autocraft.invaild_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of slots does not match and has been adjusted automatically..
        /// </summary>
        internal static string bot_autocraft_invaild_slots {
            get {
                return ResourceManager.GetString("bot.autocraft.invaild_slots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing material: {0}.
        /// </summary>
        internal static string bot_autoCraft_missing_material {
            get {
                return ResourceManager.GetString("bot.autoCraft.missing_material", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify the recipe name you want to craft..
        /// </summary>
        internal static string bot_autoCraft_no_recipe_name {
            get {
                return ResourceManager.GetString("bot.autoCraft.no_recipe_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified recipe name does not exist. Check your config file..
        /// </summary>
        internal static string bot_autoCraft_recipe_not_exist {
            get {
                return ResourceManager.GetString("bot.autoCraft.recipe_not_exist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting AutoCraft: {0}.
        /// </summary>
        internal static string bot_autoCraft_start {
            get {
                return ResourceManager.GetString("bot.autoCraft.start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoCraft cannot be started. Check your available materials for crafting {0}.
        /// </summary>
        internal static string bot_autoCraft_start_fail {
            get {
                return ResourceManager.GetString("bot.autoCraft.start_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoCraft stopped.
        /// </summary>
        internal static string bot_autoCraft_stop {
            get {
                return ResourceManager.GetString("bot.autoCraft.stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to table not found.
        /// </summary>
        internal static string bot_autoCraft_table_not_found {
            get {
                return ResourceManager.GetString("bot.autoCraft.table_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action timeout! Reason: {0}.
        /// </summary>
        internal static string bot_autoCraft_timeout {
            get {
                return ResourceManager.GetString("bot.autoCraft.timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available commands: {0}. Use /autodig help &lt;cmd name&gt; for more information..
        /// </summary>
        internal static string bot_autodig_available_cmd {
            get {
                return ResourceManager.GetString("bot.autodig.available_cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-digging ChatBot command.
        /// </summary>
        internal static string bot_autodig_cmd {
            get {
                return ResourceManager.GetString("bot.autodig.cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Digging block timeout, retry..
        /// </summary>
        internal static string bot_autodig_dig_timeout {
            get {
                return ResourceManager.GetString("bot.autodig.dig_timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the command description. Usage: /autodig help &lt;command name&gt;.
        /// </summary>
        internal static string bot_autodig_help_help {
            get {
                return ResourceManager.GetString("bot.autodig.help.help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start the automatic digging bot..
        /// </summary>
        internal static string bot_autodig_help_start {
            get {
                return ResourceManager.GetString("bot.autodig.help.start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deactivate the automatic digging bot..
        /// </summary>
        internal static string bot_autodig_help_stop {
            get {
                return ResourceManager.GetString("bot.autodig.help.stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory handling is not enabled. Unable to switch tools automatically..
        /// </summary>
        internal static string bot_autodig_no_inv_handle {
            get {
                return ResourceManager.GetString("bot.autodig.no_inv_handle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The block currently pointed to is not in the allowed list..
        /// </summary>
        internal static string bot_autodig_not_allow {
            get {
                return ResourceManager.GetString("bot.autodig.not_allow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic digging has started..
        /// </summary>
        internal static string bot_autodig_start {
            get {
                return ResourceManager.GetString("bot.autodig.start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Digging will start in {0:0.0} second(s)..
        /// </summary>
        internal static string bot_autodig_start_delay {
            get {
                return ResourceManager.GetString("bot.autodig.start_delay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-digging has been stopped..
        /// </summary>
        internal static string bot_autodig_stop {
            get {
                return ResourceManager.GetString("bot.autodig.stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added item {0}.
        /// </summary>
        internal static string bot_autoDrop_added {
            get {
                return ResourceManager.GetString("bot.autoDrop.added", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoDrop ChatBot command alias.
        /// </summary>
        internal static string bot_autoDrop_alias {
            get {
                return ResourceManager.GetString("bot.autoDrop.alias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoDrop ChatBot command.
        /// </summary>
        internal static string bot_autoDrop_cmd {
            get {
                return ResourceManager.GetString("bot.autoDrop.cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect item name {0}. Please try again..
        /// </summary>
        internal static string bot_autoDrop_incorrect_name {
            get {
                return ResourceManager.GetString("bot.autoDrop.incorrect_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total {0} in the list:
        /// {1}.
        /// </summary>
        internal static string bot_autoDrop_list {
            get {
                return ResourceManager.GetString("bot.autoDrop.list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find inventory {0}!.
        /// </summary>
        internal static string bot_autoDrop_no_inventory {
            get {
                return ResourceManager.GetString("bot.autoDrop.no_inventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No item in the list.
        /// </summary>
        internal static string bot_autoDrop_no_item {
            get {
                return ResourceManager.GetString("bot.autoDrop.no_item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read drop mode from config. Using include mode..
        /// </summary>
        internal static string bot_autoDrop_no_mode {
            get {
                return ResourceManager.GetString("bot.autoDrop.no_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item not in the list.
        /// </summary>
        internal static string bot_autoDrop_not_in_list {
            get {
                return ResourceManager.GetString("bot.autoDrop.not_in_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoDrop disabled.
        /// </summary>
        internal static string bot_autoDrop_off {
            get {
                return ResourceManager.GetString("bot.autoDrop.off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoDrop enabled.
        /// </summary>
        internal static string bot_autoDrop_on {
            get {
                return ResourceManager.GetString("bot.autoDrop.on", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed item {0}.
        /// </summary>
        internal static string bot_autoDrop_removed {
            get {
                return ResourceManager.GetString("bot.autoDrop.removed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switched to {0} mode..
        /// </summary>
        internal static string bot_autoDrop_switched {
            get {
                return ResourceManager.GetString("bot.autoDrop.switched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknwon mode. Available modes: Include, Exclude, Everything.
        /// </summary>
        internal static string bot_autoDrop_unknown_mode {
            get {
                return ResourceManager.GetString("bot.autoDrop.unknown_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available commands: {0}. Use /fish help &lt;cmd name&gt; for more information..
        /// </summary>
        internal static string bot_autoFish_available_cmd {
            get {
                return ResourceManager.GetString("bot.autoFish.available_cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Casting timeout and will soon retry. (Timeout increased to {0:0.0} sec)..
        /// </summary>
        internal static string bot_autoFish_cast_timeout {
            get {
                return ResourceManager.GetString("bot.autoFish.cast_timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retract the fishing rod. (Count: {0}).
        /// </summary>
        internal static string bot_autoFish_caught {
            get {
                return ResourceManager.GetString("bot.autoFish.caught", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retract the fishing rod at ({0:0.0},{1:0.0},{2:0.0})! (Count: {3}).
        /// </summary>
        internal static string bot_autoFish_caught_at {
            get {
                return ResourceManager.GetString("bot.autoFish.caught_at", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-Fishing ChatBot command.
        /// </summary>
        internal static string bot_autoFish_cmd {
            get {
                return ResourceManager.GetString("bot.autoFish.cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fish floating despawn, will re-cast..
        /// </summary>
        internal static string bot_autoFish_despawn {
            get {
                return ResourceManager.GetString("bot.autoFish.despawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fishing timeout, will soon re-cast..
        /// </summary>
        internal static string bot_autoFish_fishing_timeout {
            get {
                return ResourceManager.GetString("bot.autoFish.fishing_timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fishing got {0}.
        /// </summary>
        internal static string bot_autoFish_got {
            get {
                return ResourceManager.GetString("bot.autoFish.got", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the command description. Usage: /fish help &lt;command name&gt;.
        /// </summary>
        internal static string bot_autoFish_help_help {
            get {
                return ResourceManager.GetString("bot.autoFish.help.help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start auto-fishing..
        /// </summary>
        internal static string bot_autoFish_help_start {
            get {
                return ResourceManager.GetString("bot.autoFish.help.start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List all obtained items. Or use &quot;/fish status clear&quot; to clear the list..
        /// </summary>
        internal static string bot_autoFish_help_status {
            get {
                return ResourceManager.GetString("bot.autoFish.help.status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop auto-fishing..
        /// </summary>
        internal static string bot_autoFish_help_stop {
            get {
                return ResourceManager.GetString("bot.autoFish.help.stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory handling is not enabled. Cannot check rod durability and switch rods..
        /// </summary>
        internal static string bot_autoFish_no_inv_handle {
            get {
                return ResourceManager.GetString("bot.autoFish.no_inv_handle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current fishing rod is not available. Maybe broken or low durability?.
        /// </summary>
        internal static string bot_autoFish_no_rod {
            get {
                return ResourceManager.GetString("bot.autoFish.no_rod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start auto-fishing..
        /// </summary>
        internal static string bot_autoFish_start {
            get {
                return ResourceManager.GetString("bot.autoFish.start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fishing will start in {0:0.0} second(s)..
        /// </summary>
        internal static string bot_autoFish_start_at {
            get {
                return ResourceManager.GetString("bot.autoFish.start_at", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The record of the obtained items has been cleared..
        /// </summary>
        internal static string bot_autoFish_status_clear {
            get {
                return ResourceManager.GetString("bot.autoFish.status_clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All items obtained from fishing (not entirely accurate):.
        /// </summary>
        internal static string bot_autoFish_status_info {
            get {
                return ResourceManager.GetString("bot.autoFish.status_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop auto-fishing..
        /// </summary>
        internal static string bot_autoFish_stop {
            get {
                return ResourceManager.GetString("bot.autoFish.stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch to the rod in slot {0}, durability {1}/64..
        /// </summary>
        internal static string bot_autoFish_switch {
            get {
                return ResourceManager.GetString("bot.autoFish.switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Casting successfully..
        /// </summary>
        internal static string bot_autoFish_throw {
            get {
                return ResourceManager.GetString("bot.autoFish.throw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update yaw = {0:0.00}, pitch = {1:0.00}..
        /// </summary>
        internal static string bot_autoFish_update_lookat {
            get {
                return ResourceManager.GetString("bot.autoFish.update_lookat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current directory was: {0}.
        /// </summary>
        internal static string bot_autoRelog_curr_dir {
            get {
                return ResourceManager.GetString("bot.autoRelog.curr_dir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Got disconnected with message: {0}.
        /// </summary>
        internal static string bot_autoRelog_disconnect_msg {
            get {
                return ResourceManager.GetString("bot.autoRelog.disconnect_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnection initiated by User or MCC bot. Ignoring..
        /// </summary>
        internal static string bot_autoRelog_ignore_user_logout {
            get {
                return ResourceManager.GetString("bot.autoRelog.ignore_user_logout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launching with {0} reconnection attempts.
        /// </summary>
        internal static string bot_autoRelog_launch {
            get {
                return ResourceManager.GetString("bot.autoRelog.launch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing without a kick message file.
        /// </summary>
        internal static string bot_autoRelog_no_kick_msg {
            get {
                return ResourceManager.GetString("bot.autoRelog.no_kick_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message contains &apos;{0}&apos;. Reconnecting..
        /// </summary>
        internal static string bot_autoRelog_reconnect {
            get {
                return ResourceManager.GetString("bot.autoRelog.reconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring kick message, reconnecting anyway..
        /// </summary>
        internal static string bot_autoRelog_reconnect_always {
            get {
                return ResourceManager.GetString("bot.autoRelog.reconnect_always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message not containing any defined keywords. Ignoring..
        /// </summary>
        internal static string bot_autoRelog_reconnect_ignore {
            get {
                return ResourceManager.GetString("bot.autoRelog.reconnect_ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting {0:0.000} seconds before reconnecting....
        /// </summary>
        internal static string bot_autoRelog_wait {
            get {
                return ResourceManager.GetString("bot.autoRelog.wait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File not found: &apos;{0}&apos;.
        /// </summary>
        internal static string bot_autoRespond_file_not_found {
            get {
                return ResourceManager.GetString("bot.autoRespond.file_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded match:
        ///{0}.
        /// </summary>
        internal static string bot_autoRespond_loaded_match {
            get {
                return ResourceManager.GetString("bot.autoRespond.loaded_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading matches from &apos;{0}&apos;.
        /// </summary>
        internal static string bot_autoRespond_loading {
            get {
                return ResourceManager.GetString("bot.autoRespond.loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to match: {0}
        ///regex: {1}
        ///action: {2}
        ///actionPrivate: {3}
        ///actionOther: {4}
        ///ownersOnly: {5}
        ///cooldown: {6}.
        /// </summary>
        internal static string bot_autoRespond_match {
            get {
                return ResourceManager.GetString("bot.autoRespond.match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running action: {0}.
        /// </summary>
        internal static string bot_autoRespond_match_run {
            get {
                return ResourceManager.GetString("bot.autoRespond.match_run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No action for match:
        ///{0}.
        /// </summary>
        internal static string bot_autoRespond_no_action {
            get {
                return ResourceManager.GetString("bot.autoRespond.no_action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This match will never trigger:
        ///{0}.
        /// </summary>
        internal static string bot_autoRespond_no_trigger {
            get {
                return ResourceManager.GetString("bot.autoRespond.no_trigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path &apos;{0}&apos; contains invalid characters..
        /// </summary>
        internal static string bot_chatLog_invalid_file {
            get {
                return ResourceManager.GetString("bot.chatLog.invalid_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can not start/run/use the &apos;{0}&apos; bot because it requires movement, the movement is currently utilized by the &apos;{1}&apos; bot, stop it if you want to use this one..
        /// </summary>
        internal static string bot_common_movement_lock_held {
            get {
                return ResourceManager.GetString("bot.common.movement.lock.held", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending message to Discord was canceled due an error occuring. For more info enable Debug..
        /// </summary>
        internal static string bot_DiscordBridge_canceled_sending {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.canceled_sending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided channel with an id &apos;{0}&apos; has not been found!.
        /// </summary>
        internal static string bot_DiscordBridge_channel_not_found {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.channel_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command was executed with the result.
        /// </summary>
        internal static string bot_DiscordBridge_command_executed {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.command_executed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Succesfully connected with MCC!.
        /// </summary>
        internal static string bot_DiscordBridge_connected {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command allows you to specify in the which direction the messages will be relayed via the Discord Bridge chat bot..
        /// </summary>
        internal static string bot_DiscordBridge_desc {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direction of the Discord Brdige has been switched to &apos;{0}&apos;!.
        /// </summary>
        internal static string bot_DiscordBridge_direction {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.direction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both.
        /// </summary>
        internal static string bot_DiscordBridge_direction_both {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.direction.both", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord.
        /// </summary>
        internal static string bot_DiscordBridge_direction_discord {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.direction.discord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minecraft.
        /// </summary>
        internal static string bot_DiscordBridge_direction_minecraft {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.direction.minecraft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully disconnected with MCC!.
        /// </summary>
        internal static string bot_DiscordBridge_disconnected {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided guild/server with an id &apos;{0}&apos; has not been found!.
        /// </summary>
        internal static string bot_DiscordBridge_guild_not_found {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.guild_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid direction provided! Available directions: both|b, minecraft|mc, discord|dsc. Example: &quot;dscbridge direction mc&quot;.
        /// </summary>
        internal static string bot_DiscordBridge_invalid_direction {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.invalid_direction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a valid token!.
        /// </summary>
        internal static string bot_DiscordBridge_missing_token {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.missing_token", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error has occured!.
        /// </summary>
        internal static string bot_DiscordBridge_unknown_error {
            get {
                return ResourceManager.GetString("bot.DiscordBridge.unknown_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The bot is already farming!.
        /// </summary>
        internal static string bot_farmer_already_running {
            get {
                return ResourceManager.GetString("bot.farmer.already_running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The bot has already stopped farming!.
        /// </summary>
        internal static string bot_farmer_already_stopped {
            get {
                return ResourceManager.GetString("bot.farmer.already_stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crop type.
        /// </summary>
        internal static string bot_farmer_crop_type {
            get {
                return ResourceManager.GetString("bot.farmer.crop_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Farming bot.
        /// </summary>
        internal static string bot_farmer_desc {
            get {
                return ResourceManager.GetString("bot.farmer.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid crop type provided (Types which you can use: Beetroot, Carrot, Melon, Netherwart, Pumpkin, Potato, Wheat)!.
        /// </summary>
        internal static string bot_farmer_invalid_crop_type {
            get {
                return ResourceManager.GetString("bot.farmer.invalid_crop_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid radius provided, you must provide a valid integer number greater than 0!.
        /// </summary>
        internal static string bot_farmer_invalid_radius {
            get {
                return ResourceManager.GetString("bot.farmer.invalid_radius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Farmer bot needs Inventory Handling in order to work, please enable it!.
        /// </summary>
        internal static string bot_farmer_needs_inventory {
            get {
                return ResourceManager.GetString("bot.farmer.needs_inventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Farmer bot needs Terrain Handling in order to work, please enable it!.
        /// </summary>
        internal static string bot_farmer_needs_terrain {
            get {
                return ResourceManager.GetString("bot.farmer.needs_terrain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not implemented bellow 1.13!.
        /// </summary>
        internal static string bot_farmer_not_implemented {
            get {
                return ResourceManager.GetString("bot.farmer.not_implemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radius.
        /// </summary>
        internal static string bot_farmer_radius {
            get {
                return ResourceManager.GetString("bot.farmer.radius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Started farming!.
        /// </summary>
        internal static string bot_farmer_started {
            get {
                return ResourceManager.GetString("bot.farmer.started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped farming!.
        /// </summary>
        internal static string bot_farmer_stopped {
            get {
                return ResourceManager.GetString("bot.farmer.stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stoping farming, this might take a second....
        /// </summary>
        internal static string bot_farmer_stopping {
            get {
                return ResourceManager.GetString("bot.farmer.stopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have enabled teleporting, this might get your bot account kicked and in the worst case scenario banned! Use with caution!.
        /// </summary>
        internal static string bot_farmer_warining_allow_teleport {
            get {
                return ResourceManager.GetString("bot.farmer.warining_allow_teleport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have enabled un-safe movement, the bot might get hurt!.
        /// </summary>
        internal static string bot_farmer_warining_force_unsafe {
            get {
                return ResourceManager.GetString("bot.farmer.warining_force_unsafe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid parameter &quot;{0}&quot; provided (Use format: &quot;key:value&quot;)!.
        /// </summary>
        internal static string bot_farmer_warining_invalid_parameter {
            get {
                return ResourceManager.GetString("bot.farmer.warining_invalid_parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mailer command.
        /// </summary>
        internal static string bot_mailer_cmd {
            get {
                return ResourceManager.GetString("bot.mailer.cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --- Ignore list ---
        ///{0}.
        /// </summary>
        internal static string bot_mailer_cmd_getignored {
            get {
                return ResourceManager.GetString("bot.mailer.cmd.getignored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --- Mails in database ---
        ///{0}.
        /// </summary>
        internal static string bot_mailer_cmd_getmails {
            get {
                return ResourceManager.GetString("bot.mailer.cmd.getmails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See usage.
        /// </summary>
        internal static string bot_mailer_cmd_help {
            get {
                return ResourceManager.GetString("bot.mailer.cmd.help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added {0} to the ignore list!.
        /// </summary>
        internal static string bot_mailer_cmd_ignore_added {
            get {
                return ResourceManager.GetString("bot.mailer.cmd.ignore.added", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing or invalid name. Usage: {0} &lt;username&gt;.
        /// </summary>
        internal static string bot_mailer_cmd_ignore_invalid {
            get {
                return ResourceManager.GetString("bot.mailer.cmd.ignore.invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed {0} from the ignore list!.
        /// </summary>
        internal static string bot_mailer_cmd_ignore_removed {
            get {
                return ResourceManager.GetString("bot.mailer.cmd.ignore.removed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating new database file: {0}.
        /// </summary>
        internal static string bot_mailer_create_db {
            get {
                return ResourceManager.GetString("bot.mailer.create.db", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating new ignore list: {0}.
        /// </summary>
        internal static string bot_mailer_create_ignore {
            get {
                return ResourceManager.GetString("bot.mailer.create.ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delivered: {0}.
        /// </summary>
        internal static string bot_mailer_delivered {
            get {
                return ResourceManager.GetString("bot.mailer.delivered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing Mailer with settings:.
        /// </summary>
        internal static string bot_mailer_init {
            get {
                return ResourceManager.GetString("bot.mailer.init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Database File: {0}.
        /// </summary>
        internal static string bot_mailer_init_db {
            get {
                return ResourceManager.GetString("bot.mailer.init.db", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Max Database Size: {0}.
        /// </summary>
        internal static string bot_mailer_init_db_size {
            get {
                return ResourceManager.GetString("bot.mailer.init.db_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot enable Mailer: Max Database Size must be greater than zero. Please review the settings..
        /// </summary>
        internal static string bot_mailer_init_fail_db_size {
            get {
                return ResourceManager.GetString("bot.mailer.init_fail.db_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot enable Mailer: Mail Retention must be greater than zero. Please review the settings..
        /// </summary>
        internal static string bot_mailer_init_fail_mail_retention {
            get {
                return ResourceManager.GetString("bot.mailer.init_fail.mail_retention", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot enable Mailer: Max Mails per Player must be greater than zero. Please review the settings..
        /// </summary>
        internal static string bot_mailer_init_fail_max_mails {
            get {
                return ResourceManager.GetString("bot.mailer.init_fail.max_mails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Ignore List: {0}.
        /// </summary>
        internal static string bot_mailer_init_ignore {
            get {
                return ResourceManager.GetString("bot.mailer.init.ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Mail Retention: {0}.
        /// </summary>
        internal static string bot_mailer_init_mail_retention {
            get {
                return ResourceManager.GetString("bot.mailer.init.mail_retention", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Max Mails per Player: {0}.
        /// </summary>
        internal static string bot_mailer_init_max_mails {
            get {
                return ResourceManager.GetString("bot.mailer.init.max_mails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Public Interactions: {0}.
        /// </summary>
        internal static string bot_mailer_init_public {
            get {
                return ResourceManager.GetString("bot.mailer.init.public", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading database file: {0}.
        /// </summary>
        internal static string bot_mailer_load_db {
            get {
                return ResourceManager.GetString("bot.mailer.load.db", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading ignore list: .
        /// </summary>
        internal static string bot_mailer_load_ignore {
            get {
                return ResourceManager.GetString("bot.mailer.load.ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking for mails to send @ {0}.
        /// </summary>
        internal static string bot_mailer_process_mails {
            get {
                return ResourceManager.GetString("bot.mailer.process_mails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving message: {0}.
        /// </summary>
        internal static string bot_mailer_saving {
            get {
                return ResourceManager.GetString("bot.mailer.saving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is ignored!.
        /// </summary>
        internal static string bot_mailer_user_ignored {
            get {
                return ResourceManager.GetString("bot.mailer.user_ignored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Render maps (item maps).
        /// </summary>
        internal static string bot_map_cmd_desc {
            get {
                return ResourceManager.GetString("bot.map.cmd.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid ID provided, must be a number!.
        /// </summary>
        internal static string bot_map_cmd_invalid_id {
            get {
                return ResourceManager.GetString("bot.map.cmd.invalid_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A map with id &apos;{0}&apos; does not exists!.
        /// </summary>
        internal static string bot_map_cmd_not_found {
            get {
                return ResourceManager.GetString("bot.map.cmd.not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to render the map with id: &apos;{0}&apos;.
        /// </summary>
        internal static string bot_map_failed_to_render {
            get {
                return ResourceManager.GetString("bot.map.failed_to_render", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Map id: {0} (Last Updated: {1}).
        /// </summary>
        internal static string bot_map_list_item {
            get {
                return ResourceManager.GetString("bot.map.list_item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No maps received!.
        /// </summary>
        internal static string bot_map_no_maps {
            get {
                return ResourceManager.GetString("bot.map.no_maps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list of received maps from the server:.
        /// </summary>
        internal static string bot_map_received {
            get {
                return ResourceManager.GetString("bot.map.received", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received a new Map, with Id: {0}.
        /// </summary>
        internal static string bot_map_received_map {
            get {
                return ResourceManager.GetString("bot.map.received_map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Succesfully rendered a map with id &apos;{0}&apos; to: &apos;{1}&apos;.
        /// </summary>
        internal static string bot_map_rendered {
            get {
                return ResourceManager.GetString("bot.map.rendered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resized the rendered image of the map with id: &apos;{0}&apos; to {1}x{1}..
        /// </summary>
        internal static string bot_map_resized_rendered_image {
            get {
                return ResourceManager.GetString("bot.map.resized_rendered_image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of the map is reduced from ({0}x{1}) to ({2}x{3}) due to the size limitation of the current terminal..
        /// </summary>
        internal static string bot_map_scale {
            get {
                return ResourceManager.GetString("bot.map.scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sent a rendered image of a map with an id &apos;{0}&apos; to the Discord via Discord Brdige chat bot!.
        /// </summary>
        internal static string bot_map_sent_to_discord {
            get {
                return ResourceManager.GetString("bot.map.sent_to_discord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sent a rendered image of a map with an id &apos;{0}&apos; to the Telegram via Telegram Bridge chat bot!.
        /// </summary>
        internal static string bot_map_sent_to_telegram {
            get {
                return ResourceManager.GetString("bot.map.sent_to_telegram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to replay command.
        /// </summary>
        internal static string bot_replayCapture_cmd {
            get {
                return ResourceManager.GetString("bot.replayCapture.cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replay file created..
        /// </summary>
        internal static string bot_replayCapture_created {
            get {
                return ResourceManager.GetString("bot.replayCapture.created", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record was stopped. Restart the program to start another record..
        /// </summary>
        internal static string bot_replayCapture_restart {
            get {
                return ResourceManager.GetString("bot.replayCapture.restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record stopped..
        /// </summary>
        internal static string bot_replayCapture_stopped {
            get {
                return ResourceManager.GetString("bot.replayCapture.stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script &apos;{0}&apos; failed to run ({1})..
        /// </summary>
        internal static string bot_script_fail {
            get {
                return ResourceManager.GetString("bot.script.fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File not found: &apos;{0}&apos;.
        /// </summary>
        internal static string bot_script_file_not_found {
            get {
                return ResourceManager.GetString("bot.script.file_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [MCC] [{0}] Cannot find script file: {1}.
        /// </summary>
        internal static string bot_script_not_found {
            get {
                return ResourceManager.GetString("bot.script.not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script &apos;{0}&apos; loaded..
        /// </summary>
        internal static string bot_script_pm_loaded {
            get {
                return ResourceManager.GetString("bot.script.pm.loaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded task:
        ///{0}.
        /// </summary>
        internal static string bot_scriptScheduler_loaded_task {
            get {
                return ResourceManager.GetString("bot.scriptScheduler.loaded_task", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No action for task:
        ///{0}.
        /// </summary>
        internal static string bot_scriptScheduler_no_action {
            get {
                return ResourceManager.GetString("bot.scriptScheduler.no_action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This task will never trigger:
        ///{0}.
        /// </summary>
        internal static string bot_scriptScheduler_no_trigger {
            get {
                return ResourceManager.GetString("bot.scriptScheduler.no_trigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval / Running action: {0}.
        /// </summary>
        internal static string bot_scriptScheduler_running_inverval {
            get {
                return ResourceManager.GetString("bot.scriptScheduler.running_inverval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login / Running action: {0}.
        /// </summary>
        internal static string bot_scriptScheduler_running_login {
            get {
                return ResourceManager.GetString("bot.scriptScheduler.running_login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time / Running action: {0}.
        /// </summary>
        internal static string bot_scriptScheduler_running_time {
            get {
                return ResourceManager.GetString("bot.scriptScheduler.running_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to triggeronfirstlogin: {0}
        /// triggeronlogin: {1}
        /// triggerontime: {2}
        /// triggeroninterval: {3}
        /// timevalue: {4}
        /// timeinterval: {5}
        /// action: {6}.
        /// </summary>
        internal static string bot_scriptScheduler_task {
            get {
                return ResourceManager.GetString("bot.scriptScheduler.task", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending message to Telegram was canceled due an error occuring. For more info enable Debug..
        /// </summary>
        internal static string bot_TelegramBridge_canceled_sending {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.canceled_sending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command was executed with the result.
        /// </summary>
        internal static string bot_TelegramBridge_command_executed {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.command_executed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Succesfully connected with the MCC!.
        /// </summary>
        internal static string bot_TelegramBridge_connected {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command allows you to specify in the which direction the messages will be relayed via the Telegram Bridge chat bot..
        /// </summary>
        internal static string bot_TelegramBridge_desc {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direction of the Telegram Brdige has been switched to &apos;{0}&apos;!.
        /// </summary>
        internal static string bot_TelegramBridge_direction {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.direction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both.
        /// </summary>
        internal static string bot_TelegramBridge_direction_both {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.direction.both", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minecraft.
        /// </summary>
        internal static string bot_TelegramBridge_direction_minecraft {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.direction.minecraft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Telegram.
        /// </summary>
        internal static string bot_TelegramBridge_direction_Telegram {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.direction.Telegram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnected from from the MCC!.
        /// </summary>
        internal static string bot_TelegramBridge_disconnected {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid direction provided! Available directions: both|b, minecraft|mc, telegram|tg|t. Example: &quot;tgbridge direction mc&quot;.
        /// </summary>
        internal static string bot_TelegramBridge_invalid_direction {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.invalid_direction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [WARNING] You have not provided any Channel IDs, for &quot;Authorized_Chat_Ids&quot; field, anyone who finds your bot will be able to send messages and commands to it!.
        /// </summary>
        internal static string bot_TelegramBridge_missing_authorized_channels {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.missing_authorized_channels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [WARNING] You have not provided a Channel ID, you will ONLY get replies to commands sent from Telegram!.
        /// </summary>
        internal static string bot_TelegramBridge_missing_channel_id {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.missing_channel_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a valid bot token!.
        /// </summary>
        internal static string bot_TelegramBridge_missing_token {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.missing_token", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command has been disabled due to Telegram caching causing issues, please stop your client manually..
        /// </summary>
        internal static string bot_TelegramBridge_quit_disabled {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.quit_disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **🛑 Unauthorized access! 🛑
        ///
        ///Add the ID of this chat to &quot;Authorized_Chat_Ids&quot; field in the configuration file to gain access!**.
        /// </summary>
        internal static string bot_TelegramBridge_unauthorized {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.unauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error has occured!.
        /// </summary>
        internal static string bot_TelegramBridge_unknown_error {
            get {
                return ResourceManager.GetString("bot.TelegramBridge.unknown_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot: {0} said : {1}.
        /// </summary>
        internal static string bot_testBot_said {
            get {
                return ResourceManager.GetString("bot.testBot.said", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot: {0} told me : {1}.
        /// </summary>
        internal static string bot_testBot_told {
            get {
                return ResourceManager.GetString("bot.testBot.told", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to §cFailed to start a server:\n\n{0}\n\n.
        /// </summary>
        internal static string bot_WebSocketBot_failed_to_start_custom {
            get {
                return ResourceManager.GetString("bot.WebSocketBot.failed_to_start.custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to §cFailed to start a server! The provided IP address is not a valid one!.
        /// </summary>
        internal static string bot_WebSocketBot_failed_to_start_ip {
            get {
                return ResourceManager.GetString("bot.WebSocketBot.failed_to_start.ip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to §cFailed to start a server! The provided port number {0} is out of the range, it must be 65535 or bellow it!.
        /// </summary>
        internal static string bot_WebSocketBot_failed_to_start_port {
            get {
                return ResourceManager.GetString("bot.WebSocketBot.failed_to_start.port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to §bNew session connected: §a{0}.
        /// </summary>
        internal static string bot_WebSocketBot_new_session {
            get {
                return ResourceManager.GetString("bot.WebSocketBot.new_session", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to §bSession with an id §a{0}§b has been successfully authenticated!.
        /// </summary>
        internal static string bot_WebSocketBot_session_authenticated {
            get {
                return ResourceManager.GetString("bot.WebSocketBot.session_authenticated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to §bSession with an id §a{0}§b has disconnected!.
        /// </summary>
        internal static string bot_WebSocketBot_session_disconnected {
            get {
                return ResourceManager.GetString("bot.WebSocketBot.session_disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to §bSession with an id §a{0}§b has been renamed to: §a{1}§b!.
        /// </summary>
        internal static string bot_WebSocketBot_session_id_changed {
            get {
                return ResourceManager.GetString("bot.WebSocketBot.session_id_changed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to §cSession with an id §a{0}§b failed to change the ID to: §c{1}§b!.
        /// </summary>
        internal static string bot_WebSocketBot_session_id_failed_to_change {
            get {
                return ResourceManager.GetString("bot.WebSocketBot.session_id_failed_to_change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to §bServer started on ip §a{0}§b port: §a{1}.
        /// </summary>
        internal static string bot_WebSocketBot_started {
            get {
                return ResourceManager.GetString("bot.WebSocketBot.started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the Websocket server....
        /// </summary>
        internal static string bot_WebSocketBot_starting {
            get {
                return ResourceManager.GetString("bot.WebSocketBot.starting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alerts.
        /// </summary>
        internal static string botname_Alerts {
            get {
                return ResourceManager.GetString("botname.Alerts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AntiAFK.
        /// </summary>
        internal static string botname_AntiAFK {
            get {
                return ResourceManager.GetString("botname.AntiAFK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoAttack.
        /// </summary>
        internal static string botname_AutoAttack {
            get {
                return ResourceManager.GetString("botname.AutoAttack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoCraft.
        /// </summary>
        internal static string botname_AutoCraft {
            get {
                return ResourceManager.GetString("botname.AutoCraft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoDig.
        /// </summary>
        internal static string botname_AutoDig {
            get {
                return ResourceManager.GetString("botname.AutoDig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoDrop.
        /// </summary>
        internal static string botname_AutoDrop {
            get {
                return ResourceManager.GetString("botname.AutoDrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoEat.
        /// </summary>
        internal static string botname_AutoEat {
            get {
                return ResourceManager.GetString("botname.AutoEat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoFishing.
        /// </summary>
        internal static string botname_AutoFishing {
            get {
                return ResourceManager.GetString("botname.AutoFishing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoRelog.
        /// </summary>
        internal static string botname_AutoRelog {
            get {
                return ResourceManager.GetString("botname.AutoRelog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoRespond.
        /// </summary>
        internal static string botname_AutoRespond {
            get {
                return ResourceManager.GetString("botname.AutoRespond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ChatLog.
        /// </summary>
        internal static string botname_ChatLog {
            get {
                return ResourceManager.GetString("botname.ChatLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DiscordBridge.
        /// </summary>
        internal static string botname_DiscordBridge {
            get {
                return ResourceManager.GetString("botname.DiscordBridge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Farmer.
        /// </summary>
        internal static string botname_Farmer {
            get {
                return ResourceManager.GetString("botname.Farmer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FollowPlayer.
        /// </summary>
        internal static string botname_FollowPlayer {
            get {
                return ResourceManager.GetString("botname.FollowPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HangmanGame.
        /// </summary>
        internal static string botname_HangmanGame {
            get {
                return ResourceManager.GetString("botname.HangmanGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mailer.
        /// </summary>
        internal static string botname_Mailer {
            get {
                return ResourceManager.GetString("botname.Mailer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map.
        /// </summary>
        internal static string botname_Map {
            get {
                return ResourceManager.GetString("botname.Map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PlayerListLogger.
        /// </summary>
        internal static string botname_PlayerListLogger {
            get {
                return ResourceManager.GetString("botname.PlayerListLogger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RemoteControl.
        /// </summary>
        internal static string botname_RemoteControl {
            get {
                return ResourceManager.GetString("botname.RemoteControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ReplayCapture.
        /// </summary>
        internal static string botname_ReplayCapture {
            get {
                return ResourceManager.GetString("botname.ReplayCapture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script.
        /// </summary>
        internal static string botname_Script {
            get {
                return ResourceManager.GetString("botname.Script", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScriptScheduler.
        /// </summary>
        internal static string botname_ScriptScheduler {
            get {
                return ResourceManager.GetString("botname.ScriptScheduler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TelegramBridge.
        /// </summary>
        internal static string botname_TelegramBridge {
            get {
                return ResourceManager.GetString("botname.TelegramBridge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TestBot.
        /// </summary>
        internal static string botname_TestBot {
            get {
                return ResourceManager.GetString("botname.TestBot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converting session cache from disk: {0}.
        /// </summary>
        internal static string cache_converting {
            get {
                return ResourceManager.GetString("cache.converting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring invalid session token line: {0}.
        /// </summary>
        internal static string cache_ignore_line {
            get {
                return ResourceManager.GetString("cache.ignore_line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring invalid profile key token line: {0}.
        /// </summary>
        internal static string cache_ignore_line_keys {
            get {
                return ResourceManager.GetString("cache.ignore_line_keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring session token string &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string cache_ignore_string {
            get {
                return ResourceManager.GetString("cache.ignore_string", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring profile key token string &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string cache_ignore_string_keys {
            get {
                return ResourceManager.GetString("cache.ignore_string_keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded session: {0}:{1}.
        /// </summary>
        internal static string cache_loaded {
            get {
                return ResourceManager.GetString("cache.loaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded profile key, it will be refresh at {0}.
        /// </summary>
        internal static string cache_loaded_keys {
            get {
                return ResourceManager.GetString("cache.loaded_keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading Minecraft profiles: {0}.
        /// </summary>
        internal static string cache_loading {
            get {
                return ResourceManager.GetString("cache.loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading profile key cache from disk: {0}.
        /// </summary>
        internal static string cache_loading_keys {
            get {
                return ResourceManager.GetString("cache.loading_keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading session cache from disk: {0}.
        /// </summary>
        internal static string cache_loading_session {
            get {
                return ResourceManager.GetString("cache.loading_session", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Got malformed data while reading serialized session cache from disk: {0}.
        /// </summary>
        internal static string cache_malformed {
            get {
                return ResourceManager.GetString("cache.malformed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to read serialized session cache from disk: {0}.
        /// </summary>
        internal static string cache_read_fail {
            get {
                return ResourceManager.GetString("cache.read_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to read session cache from disk: {0}.
        /// </summary>
        internal static string cache_read_fail_plain {
            get {
                return ResourceManager.GetString("cache.read_fail_plain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to read profile key cache from disk: {0}.
        /// </summary>
        internal static string cache_read_fail_plain_keys {
            get {
                return ResourceManager.GetString("cache.read_fail_plain_keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to write session cache to disk: {0}.
        /// </summary>
        internal static string cache_save_fail {
            get {
                return ResourceManager.GetString("cache.save_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to write profile key cache to disk: {0}.
        /// </summary>
        internal static string cache_save_fail_keys {
            get {
                return ResourceManager.GetString("cache.save_fail_keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving session cache to disk.
        /// </summary>
        internal static string cache_saving {
            get {
                return ResourceManager.GetString("cache.saving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving profile key cache to disk.
        /// </summary>
        internal static string cache_saving_keys {
            get {
                return ResourceManager.GetString("cache.saving_keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done. File saved as &apos;{0}&apos;.
        /// </summary>
        internal static string chat_done {
            get {
                return ResourceManager.GetString("chat.done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading &apos;{0}.json&apos; from Mojang servers....
        /// </summary>
        internal static string chat_download {
            get {
                return ResourceManager.GetString("chat.download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to download the file..
        /// </summary>
        internal static string chat_fail {
            get {
                return ResourceManager.GetString("chat.fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translations file loaded..
        /// </summary>
        internal static string chat_loaded {
            get {
                return ResourceManager.GetString("chat.loaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player {0}&apos;s message chain is broken!.
        /// </summary>
        internal static string chat_message_chain_broken {
            get {
                return ResourceManager.GetString("chat.message_chain_broken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translations file not found: &apos;{0}&apos;
        ///Some messages won&apos;t be properly printed without this file..
        /// </summary>
        internal static string chat_not_found {
            get {
                return ResourceManager.GetString("chat.not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performing request to {0}.
        /// </summary>
        internal static string chat_request {
            get {
                return ResourceManager.GetString("chat.request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save the file {0}..
        /// </summary>
        internal static string chat_save_fail {
            get {
                return ResourceManager.GetString("chat.save_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch to use Minecraft&apos;s default language resource &quot;en_us.json&quot;..
        /// </summary>
        internal static string chat_use_default {
            get {
                return ResourceManager.GetString("chat.use_default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] Disconnecting and Reconnecting to the Server.
        /// </summary>
        internal static string chatbot_reconnect {
            get {
                return ResourceManager.GetString("chatbot.reconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string ChatBot_WebSocketBot_DebugMode {
            get {
                return ResourceManager.GetString("ChatBot.WebSocketBot.DebugMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swing your arm..
        /// </summary>
        internal static string cmd_animation_desc {
            get {
                return ResourceManager.GetString("cmd.animation.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a bed!.
        /// </summary>
        internal static string cmd_bed_bed_not_found {
            get {
                return ResourceManager.GetString("cmd.bed.bed_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not reach the bed safely!.
        /// </summary>
        internal static string cmd_bed_cant_reach_safely {
            get {
                return ResourceManager.GetString("cmd.bed.cant_reach_safely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used to sleep in or leave a bed..
        /// </summary>
        internal static string cmd_bed_desc {
            get {
                return ResourceManager.GetString("cmd.bed.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to reach the bed position (X: {0:0.0}, Y: {1:0.0}, Z: {2:0.0}) in time (30 seconds). Giving up!.
        /// </summary>
        internal static string cmd_bed_failed_to_reach_in_time {
            get {
                return ResourceManager.GetString("cmd.bed.failed_to_reach_in_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found a bet at (X: {0:0.0}, Y: {1:0.0}, Z: {2:0.0})..
        /// </summary>
        internal static string cmd_bed_found_a_bed_at {
            get {
                return ResourceManager.GetString("cmd.bed.found_a_bed_at", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Succesfully laid in bed!.
        /// </summary>
        internal static string cmd_bed_in {
            get {
                return ResourceManager.GetString("cmd.bed.in", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending a command to leave a bed to the server..
        /// </summary>
        internal static string cmd_bed_leaving {
            get {
                return ResourceManager.GetString("cmd.bed.leaving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moving to (X: {0:0.0}, Y: {1:0.0}, Z: {2:0.0}) where the bed is located..
        /// </summary>
        internal static string cmd_bed_moving {
            get {
                return ResourceManager.GetString("cmd.bed.moving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The block on (X: {0:0.0}, Y: {1:0.0}, Z: {2:0.0}) is not a bed!.
        /// </summary>
        internal static string cmd_bed_not_a_bed {
            get {
                return ResourceManager.GetString("cmd.bed.not_a_bed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not lay in bed. Are you trying to sleep in a bed? (PS: You must use the head block coordinates of the bed).
        /// </summary>
        internal static string cmd_bed_not_in {
            get {
                return ResourceManager.GetString("cmd.bed.not_in", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching for a bed in radius of {0:0.00}....
        /// </summary>
        internal static string cmd_bed_searching {
            get {
                return ResourceManager.GetString("cmd.bed.searching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trying to sleep in a bed on location (X: {0:0.0}, Y: {1:0.0}, Z: {2:0.0}). Result: {3}.
        /// </summary>
        internal static string cmd_bed_trying_to_use {
            get {
                return ResourceManager.GetString("cmd.bed.trying_to_use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocks around.
        /// </summary>
        internal static string cmd_blockinfo_BlocksAround {
            get {
                return ResourceManager.GetString("cmd.blockinfo.BlocksAround", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block type.
        /// </summary>
        internal static string cmd_blockinfo_BlockType {
            get {
                return ResourceManager.GetString("cmd.blockinfo.BlockType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the type of the block on the provided coordinates. (Use -s to report blocks around the target block)..
        /// </summary>
        internal static string cmd_blockinfo_desc {
            get {
                return ResourceManager.GetString("cmd.blockinfo.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negative.
        /// </summary>
        internal static string cmd_blockinfo_Negative {
            get {
                return ResourceManager.GetString("cmd.blockinfo.Negative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Positive.
        /// </summary>
        internal static string cmd_blockinfo_Positive {
            get {
                return ResourceManager.GetString("cmd.blockinfo.Positive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List bots, unload a bot or all bots..
        /// </summary>
        internal static string cmd_bots_desc {
            get {
                return ResourceManager.GetString("cmd.bots.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded bots.
        /// </summary>
        internal static string cmd_bots_list {
            get {
                return ResourceManager.GetString("cmd.bots.list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No bots loaded!.
        /// </summary>
        internal static string cmd_bots_noloaded {
            get {
                return ResourceManager.GetString("cmd.bots.noloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot {0} is not loaded, check if you have made a typo!.
        /// </summary>
        internal static string cmd_bots_notfound {
            get {
                return ResourceManager.GetString("cmd.bots.notfound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully unloaded bot: {0}.
        /// </summary>
        internal static string cmd_bots_unloaded {
            get {
                return ResourceManager.GetString("cmd.bots.unloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully unloaded all bots!.
        /// </summary>
        internal static string cmd_bots_unloaded_all {
            get {
                return ResourceManager.GetString("cmd.bots.unloaded_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changed to slot {0}.
        /// </summary>
        internal static string cmd_changeSlot_changed {
            get {
                return ResourceManager.GetString("cmd.changeSlot.changed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change slot in hotbar.
        /// </summary>
        internal static string cmd_changeSlot_desc {
            get {
                return ResourceManager.GetString("cmd.changeSlot.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not change slot.
        /// </summary>
        internal static string cmd_changeSlot_fail {
            get {
                return ResourceManager.GetString("cmd.changeSlot.fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not change slot: Not a Number.
        /// </summary>
        internal static string cmd_changeSlot_nan {
            get {
                return ResourceManager.GetString("cmd.changeSlot.nan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to chunk: ({0}, {1})..
        /// </summary>
        internal static string cmd_chunk_chunk_pos {
            get {
                return ResourceManager.GetString("cmd.chunk.chunk_pos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current location：{0}, chunk: ({1}, {2})..
        /// </summary>
        internal static string cmd_chunk_current {
            get {
                return ResourceManager.GetString("cmd.chunk.current", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the chunk loading status.
        ///Change EnableEmoji=false in the settings if the display is confusing..
        /// </summary>
        internal static string cmd_chunk_desc {
            get {
                return ResourceManager.GetString("cmd.chunk.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command is used for debugging, make sure you know what you are doing..
        /// </summary>
        internal static string cmd_chunk_for_debug {
            get {
                return ResourceManager.GetString("cmd.chunk.for_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player:{0}, MarkedChunk:{1}, NotReceived:{2}, Loading:{3}, Loaded:{4}.
        /// </summary>
        internal static string cmd_chunk_icon {
            get {
                return ResourceManager.GetString("cmd.chunk.icon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Marked location: .
        /// </summary>
        internal static string cmd_chunk_marked {
            get {
                return ResourceManager.GetString("cmd.chunk.marked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since the marked chunk is outside the graph, it will not be displayed!.
        /// </summary>
        internal static string cmd_chunk_outside {
            get {
                return ResourceManager.GetString("cmd.chunk.outside", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connect to the specified server..
        /// </summary>
        internal static string cmd_connect_desc {
            get {
                return ResourceManager.GetString("cmd.connect.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid server IP &apos;{0}&apos;..
        /// </summary>
        internal static string cmd_connect_invalid_ip {
            get {
                return ResourceManager.GetString("cmd.connect.invalid_ip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown account &apos;{0}&apos;..
        /// </summary>
        internal static string cmd_connect_unknown {
            get {
                return ResourceManager.GetString("cmd.connect.unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to toggle debug messages..
        /// </summary>
        internal static string cmd_debug_desc {
            get {
                return ResourceManager.GetString("cmd.debug.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug messages are now OFF.
        /// </summary>
        internal static string cmd_debug_state_off {
            get {
                return ResourceManager.GetString("cmd.debug.state_off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug messages are now ON.
        /// </summary>
        internal static string cmd_debug_state_on {
            get {
                return ResourceManager.GetString("cmd.debug.state_on", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel mining the block located at {0}..
        /// </summary>
        internal static string cmd_dig_cancel {
            get {
                return ResourceManager.GetString("cmd.dig.cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to break a block.
        /// </summary>
        internal static string cmd_dig_desc {
            get {
                return ResourceManager.GetString("cmd.dig.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to dig block at {0} {1} {2} ({3}).
        /// </summary>
        internal static string cmd_dig_dig {
            get {
                return ResourceManager.GetString("cmd.dig.dig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mining of the block located at {0} ends..
        /// </summary>
        internal static string cmd_dig_end {
            get {
                return ResourceManager.GetString("cmd.dig.end", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start digging block..
        /// </summary>
        internal static string cmd_dig_fail {
            get {
                return ResourceManager.GetString("cmd.dig.fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No block at this location (Air).
        /// </summary>
        internal static string cmd_dig_no_block {
            get {
                return ResourceManager.GetString("cmd.dig.no_block", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are too far away from this block..
        /// </summary>
        internal static string cmd_dig_too_far {
            get {
                return ResourceManager.GetString("cmd.dig.too_far", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop specified type of items from player inventory or opened container.
        /// </summary>
        internal static string cmd_dropItem_desc {
            get {
                return ResourceManager.GetString("cmd.dropItem.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dropped all {0} from inventory #{1}.
        /// </summary>
        internal static string cmd_dropItem_dropped {
            get {
                return ResourceManager.GetString("cmd.dropItem.dropped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown item {0}.
        /// </summary>
        internal static string cmd_dropItem_unknown_item {
            get {
                return ResourceManager.GetString("cmd.dropItem.unknown_item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sent a click to the server, if you have enough levels and if you have placed the items in the correct slots it should enchant!.
        /// </summary>
        internal static string cmd_enchant_clicked {
            get {
                return ResourceManager.GetString("cmd.enchant.clicked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enchant an item when you have the Enchantment table opened and the list of enchants recieved..
        /// </summary>
        internal static string cmd_enchant_desc {
            get {
                return ResourceManager.GetString("cmd.enchant.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must put an item inside the enchanting table in slot 0!.
        /// </summary>
        internal static string cmd_enchant_enchanting_no_item {
            get {
                return ResourceManager.GetString("cmd.enchant.enchanting_no_item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must put at least 3 lapis lazuli inside the enchanting table in slot 1!.
        /// </summary>
        internal static string cmd_enchant_enchanting_no_lapis {
            get {
                return ResourceManager.GetString("cmd.enchant.enchanting_no_lapis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must open a an enchanting table in order to use this option!.
        /// </summary>
        internal static string cmd_enchant_enchanting_table_not_opened {
            get {
                return ResourceManager.GetString("cmd.enchant.enchanting_table_not_opened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid slot provided (Available: top, middle, bottom)!.
        /// </summary>
        internal static string cmd_enchant_invalid_slot {
            get {
                return ResourceManager.GetString("cmd.enchant.invalid_slot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first put an item to enchant to the enchanting table in order to get enchantments from the server, then you can execute this command!.
        /// </summary>
        internal static string cmd_enchant_no_enchantments {
            get {
                return ResourceManager.GetString("cmd.enchant.no_enchantments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You do not have enouhg levels to enchant! (Your current level is {0}, you need to be level {1})..
        /// </summary>
        internal static string cmd_enchant_no_levels {
            get {
                return ResourceManager.GetString("cmd.enchant.no_levels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not click!.
        /// </summary>
        internal static string cmd_enchant_not_clicked {
            get {
                return ResourceManager.GetString("cmd.enchant.not_clicked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity attacked.
        /// </summary>
        internal static string cmd_entityCmd_attacked {
            get {
                return ResourceManager.GetString("cmd.entityCmd.attacked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boots.
        /// </summary>
        internal static string cmd_entityCmd_boots {
            get {
                return ResourceManager.GetString("cmd.entityCmd.boots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chestplate.
        /// </summary>
        internal static string cmd_entityCmd_chestplate {
            get {
                return ResourceManager.GetString("cmd.entityCmd.chestplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Name.
        /// </summary>
        internal static string cmd_entityCmd_customname {
            get {
                return ResourceManager.GetString("cmd.entityCmd.customname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance.
        /// </summary>
        internal static string cmd_entityCmd_distance {
            get {
                return ResourceManager.GetString("cmd.entityCmd.distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entities.
        /// </summary>
        internal static string cmd_entityCmd_entities {
            get {
                return ResourceManager.GetString("cmd.entityCmd.entities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity.
        /// </summary>
        internal static string cmd_entityCmd_entity {
            get {
                return ResourceManager.GetString("cmd.entityCmd.entity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment.
        /// </summary>
        internal static string cmd_entityCmd_equipment {
            get {
                return ResourceManager.GetString("cmd.entityCmd.equipment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Health.
        /// </summary>
        internal static string cmd_entityCmd_health {
            get {
                return ResourceManager.GetString("cmd.entityCmd.health", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Helmet.
        /// </summary>
        internal static string cmd_entityCmd_helmet {
            get {
                return ResourceManager.GetString("cmd.entityCmd.helmet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item.
        /// </summary>
        internal static string cmd_entityCmd_item {
            get {
                return ResourceManager.GetString("cmd.entityCmd.item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latency.
        /// </summary>
        internal static string cmd_entityCmd_latency {
            get {
                return ResourceManager.GetString("cmd.entityCmd.latency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leggings.
        /// </summary>
        internal static string cmd_entityCmd_leggings {
            get {
                return ResourceManager.GetString("cmd.entityCmd.leggings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location.
        /// </summary>
        internal static string cmd_entityCmd_location {
            get {
                return ResourceManager.GetString("cmd.entityCmd.location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main Hand.
        /// </summary>
        internal static string cmd_entityCmd_mainhand {
            get {
                return ResourceManager.GetString("cmd.entityCmd.mainhand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nickname.
        /// </summary>
        internal static string cmd_entityCmd_nickname {
            get {
                return ResourceManager.GetString("cmd.entityCmd.nickname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity not found.
        /// </summary>
        internal static string cmd_entityCmd_not_found {
            get {
                return ResourceManager.GetString("cmd.entityCmd.not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Off Hand.
        /// </summary>
        internal static string cmd_entityCmd_offhand {
            get {
                return ResourceManager.GetString("cmd.entityCmd.offhand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pose.
        /// </summary>
        internal static string cmd_entityCmd_pose {
            get {
                return ResourceManager.GetString("cmd.entityCmd.pose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string cmd_entityCmd_type {
            get {
                return ResourceManager.GetString("cmd.entityCmd.type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity used.
        /// </summary>
        internal static string cmd_entityCmd_used {
            get {
                return ResourceManager.GetString("cmd.entityCmd.used", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to execute a command if a condition is met. (You can use variables from MinecraftClient.ini and /set command, as well as CSharp expressions).
        /// </summary>
        internal static string cmd_execif_desc {
            get {
                return ResourceManager.GetString("cmd.execif.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: {0}.
        /// </summary>
        internal static string cmd_execif_error {
            get {
                return ResourceManager.GetString("cmd.execif.error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has occured while executing the command: {0}.
        /// </summary>
        internal static string cmd_execif_error_occured {
            get {
                return ResourceManager.GetString("cmd.execif.error_occured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The condition &apos;{0}&apos; was met, executed command &apos;{1}&apos; with result &apos;{2}&apos;..
        /// </summary>
        internal static string cmd_execif_executed {
            get {
                return ResourceManager.GetString("cmd.execif.executed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The condition &apos;{0}&apos; was met, executed command &apos;{1}&apos;, no result was returned..
        /// </summary>
        internal static string cmd_execif_executed_no_output {
            get {
                return ResourceManager.GetString("cmd.execif.executed_no_output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute multiple commands one after another.
        /// </summary>
        internal static string cmd_execmulti_desc {
            get {
                return ResourceManager.GetString("cmd.execmulti.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executed the command &apos;{0}&apos; with {1}.
        /// </summary>
        internal static string cmd_execmulti_executed {
            get {
                return ResourceManager.GetString("cmd.execmulti.executed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to no result!.
        /// </summary>
        internal static string cmd_execmulti_no_result {
            get {
                return ResourceManager.GetString("cmd.execmulti.no_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can not use execmulti or execif within execmulti command!.
        /// </summary>
        internal static string cmd_execmulti_prevent {
            get {
                return ResourceManager.GetString("cmd.execmulti.prevent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to result &apos;{0}&apos;!.
        /// </summary>
        internal static string cmd_execmulti_result {
            get {
                return ResourceManager.GetString("cmd.execmulti.result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to disconnect from the server..
        /// </summary>
        internal static string cmd_exit_desc {
            get {
                return ResourceManager.GetString("cmd.exit.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already following {0}!.
        /// </summary>
        internal static string cmd_follow_already_following {
            get {
                return ResourceManager.GetString("cmd.follow.already_following", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already stopped.
        /// </summary>
        internal static string cmd_follow_already_stopped {
            get {
                return ResourceManager.GetString("cmd.follow.already_stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not reach the player, he is either in chunks that are not loaded, too far away or not reachable by a bot due to obstacles like gaps or water bodies!.
        /// </summary>
        internal static string cmd_follow_cant_reach_player {
            get {
                return ResourceManager.GetString("cmd.follow.cant_reach_player", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Makes the bot follow a specified player.
        /// </summary>
        internal static string cmd_follow_desc {
            get {
                return ResourceManager.GetString("cmd.follow.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid or empty player name provided!.
        /// </summary>
        internal static string cmd_follow_invalid_name {
            get {
                return ResourceManager.GetString("cmd.follow.invalid_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified player is either not connected out out of the range!.
        /// </summary>
        internal static string cmd_follow_invalid_player {
            get {
                return ResourceManager.GetString("cmd.follow.invalid_player", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NOTE: The bot is quite slow, you need to walk slowly and at a close distance for it to be able to keep up, kinda like when you make animals follow you by holding food in your hand. This is a limitation due to a pathfinding algorithm, we are working to get a better one..
        /// </summary>
        internal static string cmd_follow_note {
            get {
                return ResourceManager.GetString("cmd.follow.note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pausing!.
        /// </summary>
        internal static string cmd_follow_pausing {
            get {
                return ResourceManager.GetString("cmd.follow.pausing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The player {0} came back to the range!.
        /// </summary>
        internal static string cmd_follow_player_came_to_the_range {
            get {
                return ResourceManager.GetString("cmd.follow.player_came_to_the_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The player {0} left the server!.
        /// </summary>
        internal static string cmd_follow_player_left {
            get {
                return ResourceManager.GetString("cmd.follow.player_left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The player {0} has left the range!.
        /// </summary>
        internal static string cmd_follow_player_left_the_range {
            get {
                return ResourceManager.GetString("cmd.follow.player_left_the_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resuming to follow!.
        /// </summary>
        internal static string cmd_follow_resuming {
            get {
                return ResourceManager.GetString("cmd.follow.resuming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Started following {0}!.
        /// </summary>
        internal static string cmd_follow_started {
            get {
                return ResourceManager.GetString("cmd.follow.started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped following!.
        /// </summary>
        internal static string cmd_follow_stopping {
            get {
                return ResourceManager.GetString("cmd.follow.stopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switched to following {0}!.
        /// </summary>
        internal static string cmd_follow_switched {
            get {
                return ResourceManager.GetString("cmd.follow.switched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled us-safe walking (NOTE: The bot might die or get hurt!).
        /// </summary>
        internal static string cmd_follow_unsafe_enabled {
            get {
                return ResourceManager.GetString("cmd.follow.unsafe_enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to follow &lt;player name|stop&gt; [-f] (Use -f to enable un-safe walking).
        /// </summary>
        internal static string cmd_follow_usage {
            get {
                return ResourceManager.GetString("cmd.follow.usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Health and Food saturation..
        /// </summary>
        internal static string cmd_health_desc {
            get {
                return ResourceManager.GetString("cmd.health.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Health: {0}, Saturation: {1}, Level: {2}, TotalExperience: {3}.
        /// </summary>
        internal static string cmd_health_response {
            get {
                return ResourceManager.GetString("cmd.health.response", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} clicking slot {1} in window #{2}.
        /// </summary>
        internal static string cmd_inventory_clicking {
            get {
                return ResourceManager.GetString("cmd.inventory.clicking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closing Inventoy #{0}.
        /// </summary>
        internal static string cmd_inventory_close {
            get {
                return ResourceManager.GetString("cmd.inventory.close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to close Inventory #{0}.
        /// </summary>
        internal static string cmd_inventory_close_fail {
            get {
                return ResourceManager.GetString("cmd.inventory.close_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find container, please retry with explicit ID.
        /// </summary>
        internal static string cmd_inventory_container_not_found {
            get {
                return ResourceManager.GetString("cmd.inventory.container_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested to clear slot #{0}.
        /// </summary>
        internal static string cmd_inventory_creative_delete {
            get {
                return ResourceManager.GetString("cmd.inventory.creative_delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested {0} x{1} in slot #{2}.
        /// </summary>
        internal static string cmd_inventory_creative_done {
            get {
                return ResourceManager.GetString("cmd.inventory.creative_done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to request Creative action.
        /// </summary>
        internal static string cmd_inventory_creative_fail {
            get {
                return ResourceManager.GetString("cmd.inventory.creative_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Damage.
        /// </summary>
        internal static string cmd_inventory_damage {
            get {
                return ResourceManager.GetString("cmd.inventory.damage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory command.
        /// </summary>
        internal static string cmd_inventory_desc {
            get {
                return ResourceManager.GetString("cmd.inventory.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dropped 1 item from slot #{0}.
        /// </summary>
        internal static string cmd_inventory_drop {
            get {
                return ResourceManager.GetString("cmd.inventory.drop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dropped whole item stack from slot #{0}.
        /// </summary>
        internal static string cmd_inventory_drop_stack {
            get {
                return ResourceManager.GetString("cmd.inventory.drop_stack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found items.
        /// </summary>
        internal static string cmd_inventory_found_items {
            get {
                return ResourceManager.GetString("cmd.inventory.found_items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available actions.
        /// </summary>
        internal static string cmd_inventory_help_available {
            get {
                return ResourceManager.GetString("cmd.inventory.help.available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic usage.
        /// </summary>
        internal static string cmd_inventory_help_basic {
            get {
                return ResourceManager.GetString("cmd.inventory.help.basic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click on an item..
        /// </summary>
        internal static string cmd_inventory_help_click {
            get {
                return ResourceManager.GetString("cmd.inventory.help.click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close an opened container..
        /// </summary>
        internal static string cmd_inventory_help_close {
            get {
                return ResourceManager.GetString("cmd.inventory.help.close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear slot in creative mode..
        /// </summary>
        internal static string cmd_inventory_help_creativedelete {
            get {
                return ResourceManager.GetString("cmd.inventory.help.creativedelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Give item in creative mode..
        /// </summary>
        internal static string cmd_inventory_help_creativegive {
            get {
                return ResourceManager.GetString("cmd.inventory.help.creativegive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop an item from inventory..
        /// </summary>
        internal static string cmd_inventory_help_drop {
            get {
                return ResourceManager.GetString("cmd.inventory.help.drop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Use &apos;/inventory help &lt;action&gt;&apos; for action help.
        ///&apos;player&apos; and &apos;container&apos; can be simplified to &apos;p&apos; and &apos;c&apos;.
        ///Note that parameters in &apos;[]&apos; are optional..
        /// </summary>
        internal static string cmd_inventory_help_help {
            get {
                return ResourceManager.GetString("cmd.inventory.help.help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List avaliable inventories.
        /// </summary>
        internal static string cmd_inventory_help_inventories {
            get {
                return ResourceManager.GetString("cmd.inventory.help.inventories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List your inventory..
        /// </summary>
        internal static string cmd_inventory_help_list {
            get {
                return ResourceManager.GetString("cmd.inventory.help.list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for an item in avaliable Inventories.
        /// </summary>
        internal static string cmd_inventory_help_search {
            get {
                return ResourceManager.GetString("cmd.inventory.help.search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift click an item..
        /// </summary>
        internal static string cmd_inventory_help_shiftclick {
            get {
                return ResourceManager.GetString("cmd.inventory.help.shiftclick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown action..
        /// </summary>
        internal static string cmd_inventory_help_unknown {
            get {
                return ResourceManager.GetString("cmd.inventory.help.unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage.
        /// </summary>
        internal static string cmd_inventory_help_usage {
            get {
                return ResourceManager.GetString("cmd.inventory.help.usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your selected hotbar is {0}.
        /// </summary>
        internal static string cmd_inventory_hotbar {
            get {
                return ResourceManager.GetString("cmd.inventory.hotbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventories.
        /// </summary>
        internal static string cmd_inventory_inventories {
            get {
                return ResourceManager.GetString("cmd.inventory.inventories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Inventories.
        /// </summary>
        internal static string cmd_inventory_inventories_available {
            get {
                return ResourceManager.GetString("cmd.inventory.inventories_available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory.
        /// </summary>
        internal static string cmd_inventory_inventory {
            get {
                return ResourceManager.GetString("cmd.inventory.inventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left.
        /// </summary>
        internal static string cmd_inventory_left {
            get {
                return ResourceManager.GetString("cmd.inventory.left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Middle.
        /// </summary>
        internal static string cmd_inventory_middle {
            get {
                return ResourceManager.GetString("cmd.inventory.middle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must be in Creative gamemode.
        /// </summary>
        internal static string cmd_inventory_need_creative {
            get {
                return ResourceManager.GetString("cmd.inventory.need_creative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the specified item in any of avaliable Inventories!.
        /// </summary>
        internal static string cmd_inventory_no_found_items {
            get {
                return ResourceManager.GetString("cmd.inventory.no_found_items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No item in slot #{0}.
        /// </summary>
        internal static string cmd_inventory_no_item {
            get {
                return ResourceManager.GetString("cmd.inventory.no_item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory #{0} do not exist.
        /// </summary>
        internal static string cmd_inventory_not_exist {
            get {
                return ResourceManager.GetString("cmd.inventory.not_exist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right.
        /// </summary>
        internal static string cmd_inventory_right {
            get {
                return ResourceManager.GetString("cmd.inventory.right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift clicking slot {0} in window #{1}.
        /// </summary>
        internal static string cmd_inventory_shiftclick {
            get {
                return ResourceManager.GetString("cmd.inventory.shiftclick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift click failed, this may be because this container type is not supported.
        /// </summary>
        internal static string cmd_inventory_shiftclick_fail {
            get {
                return ResourceManager.GetString("cmd.inventory.shiftclick_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift right-clicking slot {0} in window #{1}.
        /// </summary>
        internal static string cmd_inventory_shiftrightclick {
            get {
                return ResourceManager.GetString("cmd.inventory.shiftrightclick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already collecting items!.
        /// </summary>
        internal static string cmd_items_collector_already_collecting {
            get {
                return ResourceManager.GetString("cmd.items.collector.already.collecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already not collecting items!.
        /// </summary>
        internal static string cmd_items_collector_already_not_collecting {
            get {
                return ResourceManager.GetString("cmd.items.collector.already.not.collecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collect items on the ground.
        /// </summary>
        internal static string cmd_items_collector_desc {
            get {
                return ResourceManager.GetString("cmd.items.collector.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Started collecting items!.
        /// </summary>
        internal static string cmd_items_collector_started {
            get {
                return ResourceManager.GetString("cmd.items.collector.started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped collecting items..
        /// </summary>
        internal static string cmd_items_collector_stopped {
            get {
                return ResourceManager.GetString("cmd.items.collector.stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping item collection....
        /// </summary>
        internal static string cmd_items_collector_stopping {
            get {
                return ResourceManager.GetString("cmd.items.collector.stopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to itemscollector &lt;start/stop&gt;.
        /// </summary>
        internal static string cmd_items_collector_usage {
            get {
                return ResourceManager.GetString("cmd.items.collector.usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to get the player list..
        /// </summary>
        internal static string cmd_list_desc {
            get {
                return ResourceManager.GetString("cmd.list.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PlayerList: {0}.
        /// </summary>
        internal static string cmd_list_players {
            get {
                return ResourceManager.GetString("cmd.list.players", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to log some text to the console..
        /// </summary>
        internal static string cmd_log_desc {
            get {
                return ResourceManager.GetString("cmd.log.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking at yaw: {0} pitch: {1}.
        /// </summary>
        internal static string cmd_look_at {
            get {
                return ResourceManager.GetString("cmd.look.at", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking at {0}.
        /// </summary>
        internal static string cmd_look_block {
            get {
                return ResourceManager.GetString("cmd.look.block", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to look at direction or coordinates..
        /// </summary>
        internal static string cmd_look_desc {
            get {
                return ResourceManager.GetString("cmd.look.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The block currently intersecting the line of sight is {0} ({1:0}, {2:0}, {3:0}), distance is {4:0.0}({5:0.0})..
        /// </summary>
        internal static string cmd_look_inspection {
            get {
                return ResourceManager.GetString("cmd.look.inspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no block within {0} meters that intersects with the line of sight..
        /// </summary>
        internal static string cmd_look_noinspection {
            get {
                return ResourceManager.GetString("cmd.look.noinspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown direction &apos;{0}&apos;.
        /// </summary>
        internal static string cmd_look_unknown {
            get {
                return ResourceManager.GetString("cmd.look.unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chunk loading status: {0:P} - {1} out of {2} load completed..
        /// </summary>
        internal static string cmd_move_chunk_loading_status {
            get {
                return ResourceManager.GetString("cmd.move.chunk_loading_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The chunk where the target location resides has not yet been loaded.
        ///You can use &quot;/chunk status {0:0.0} {1:0.0} {2:0.0}&quot; to check the chunk loading status..
        /// </summary>
        internal static string cmd_move_chunk_not_loaded {
            get {
                return ResourceManager.GetString("cmd.move.chunk_not_loaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to walk or start walking..
        /// </summary>
        internal static string cmd_move_desc {
            get {
                return ResourceManager.GetString("cmd.move.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to force unsafe movements like falling or touching fire.
        /// </summary>
        internal static string cmd_move_desc_force {
            get {
                return ResourceManager.GetString("cmd.move.desc_force", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot move in that direction..
        /// </summary>
        internal static string cmd_move_dir_fail {
            get {
                return ResourceManager.GetString("cmd.move.dir_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabling Terrain and Movements..
        /// </summary>
        internal static string cmd_move_disable {
            get {
                return ResourceManager.GetString("cmd.move.disable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling Terrain and Movements on next server login, respawn or world change..
        /// </summary>
        internal static string cmd_move_enable {
            get {
                return ResourceManager.GetString("cmd.move.enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to compute path to {0}.
        /// </summary>
        internal static string cmd_move_fail {
            get {
                return ResourceManager.GetString("cmd.move.fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gravity is disabled..
        /// </summary>
        internal static string cmd_move_gravity_disabled {
            get {
                return ResourceManager.GetString("cmd.move.gravity.disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gravity is enabled..
        /// </summary>
        internal static string cmd_move_gravity_enabled {
            get {
                return ResourceManager.GetString("cmd.move.gravity.enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moving {0}.
        /// </summary>
        internal static string cmd_move_moving {
            get {
                return ResourceManager.GetString("cmd.move.moving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to compute a safe path to {0}. Try -f parameter to allow unsafe movements..
        /// </summary>
        internal static string cmd_move_suggestforce {
            get {
                return ResourceManager.GetString("cmd.move.suggestforce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Walking from {1} to {0}.
        /// </summary>
        internal static string cmd_move_walk {
            get {
                return ResourceManager.GetString("cmd.move.walk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set an item name when an Anvil inventory is active and the item is in the first slot..
        /// </summary>
        internal static string cmd_nameitem_desc {
            get {
                return ResourceManager.GetString("cmd.nameitem.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to send the packet for naming an item, try again!.
        /// </summary>
        internal static string cmd_nameitem_failed {
            get {
                return ResourceManager.GetString("cmd.nameitem.failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to place an item in the first slot (slot id: 0) of the Anvil inventory!.
        /// </summary>
        internal static string cmd_nameitem_first_slot_empty {
            get {
                return ResourceManager.GetString("cmd.nameitem.first.slot.empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The item name cannot be empty!.
        /// </summary>
        internal static string cmd_nameitem_item_name_empty {
            get {
                return ResourceManager.GetString("cmd.nameitem.item.name.empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to have an Anvil inventory opened and active in order to use this command!.
        /// </summary>
        internal static string cmd_nameitem_no_anvil_inventory_open {
            get {
                return ResourceManager.GetString("cmd.nameitem.no.anvil.inventory.open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully sent the item name to the server, you can now click on the slot number 2 in the Anvil inventory to rename the item..
        /// </summary>
        internal static string cmd_nameitem_successful {
            get {
                return ResourceManager.GetString("cmd.nameitem.successful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to restart and reconnect to the server..
        /// </summary>
        internal static string cmd_reco_desc {
            get {
                return ResourceManager.GetString("cmd.reco.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reloads MCC settings..
        /// </summary>
        internal static string cmd_reload_desc {
            get {
                return ResourceManager.GetString("cmd.reload.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reloaded Settings!.
        /// </summary>
        internal static string cmd_reload_finished {
            get {
                return ResourceManager.GetString("cmd.reload.finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reloading settings....
        /// </summary>
        internal static string cmd_reload_started {
            get {
                return ResourceManager.GetString("cmd.reload.started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command will NOT affect certain settings which are used before connecting to a server!.
        /// </summary>
        internal static string cmd_reload_warning1 {
            get {
                return ResourceManager.GetString("cmd.reload.warning1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some settings passed through the command line parameters might get overriden!.
        /// </summary>
        internal static string cmd_reload_warning2 {
            get {
                return ResourceManager.GetString("cmd.reload.warning2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You also might need to reconnect for some settings to take effect..
        /// </summary>
        internal static string cmd_reload_warning3 {
            get {
                return ResourceManager.GetString("cmd.reload.warning3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replay Chat Bot will not be hard reloaded due to technical limitations!.
        /// </summary>
        internal static string cmd_reload_warning4 {
            get {
                return ResourceManager.GetString("cmd.reload.warning4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this to respawn if you are dead..
        /// </summary>
        internal static string cmd_respawn_desc {
            get {
                return ResourceManager.GetString("cmd.respawn.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have respawned..
        /// </summary>
        internal static string cmd_respawn_done {
            get {
                return ResourceManager.GetString("cmd.respawn.done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to run a script file..
        /// </summary>
        internal static string cmd_script_desc {
            get {
                return ResourceManager.GetString("cmd.script.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to send a chat message or command..
        /// </summary>
        internal static string cmd_send_desc {
            get {
                return ResourceManager.GetString("cmd.send.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set a custom %variable%..
        /// </summary>
        internal static string cmd_set_desc {
            get {
                return ResourceManager.GetString("cmd.set.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to variable name must be A-Za-z0-9..
        /// </summary>
        internal static string cmd_set_format {
            get {
                return ResourceManager.GetString("cmd.set.format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set a custom %variable% randomly to a given value..
        /// </summary>
        internal static string cmd_setrnd_desc {
            get {
                return ResourceManager.GetString("cmd.setrnd.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to setrnd variable -7 to 17 OR setrnd variable string1 &quot;\&quot;string2\&quot; string3&quot;.
        /// </summary>
        internal static string cmd_setrnd_format {
            get {
                return ResourceManager.GetString("cmd.setrnd.format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to setrnd variable -7 to 17.
        /// </summary>
        internal static string cmd_setrndnum_format {
            get {
                return ResourceManager.GetString("cmd.setrndnum.format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to setrnd variable string1 &quot;\&quot;string2\&quot; string3&quot;.
        /// </summary>
        internal static string cmd_setrndstr_format {
            get {
                return ResourceManager.GetString("cmd.setrndstr.format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggles sneaking.
        /// </summary>
        internal static string cmd_sneak_desc {
            get {
                return ResourceManager.GetString("cmd.sneak.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are not sneaking anymore.
        /// </summary>
        internal static string cmd_sneak_off {
            get {
                return ResourceManager.GetString("cmd.sneak.off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are sneaking now.
        /// </summary>
        internal static string cmd_sneak_on {
            get {
                return ResourceManager.GetString("cmd.sneak.on", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current tps.
        /// </summary>
        internal static string cmd_tps_current {
            get {
                return ResourceManager.GetString("cmd.tps.current", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display server current tps (tick per second). May not be accurate.
        /// </summary>
        internal static string cmd_tps_desc {
            get {
                return ResourceManager.GetString("cmd.tps.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Place a block or open chest.
        /// </summary>
        internal static string cmd_useblock_desc {
            get {
                return ResourceManager.GetString("cmd.useblock.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Useblock at ({0:0.0}, {1:0.0}, {2:0.0}) {3}..
        /// </summary>
        internal static string cmd_useblock_use {
            get {
                return ResourceManager.GetString("cmd.useblock.use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use (left click) an item on the hand.
        /// </summary>
        internal static string cmd_useitem_desc {
            get {
                return ResourceManager.GetString("cmd.useitem.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used an item.
        /// </summary>
        internal static string cmd_useitem_use {
            get {
                return ResourceManager.GetString("cmd.useitem.use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum number that you have provided is bigger than the maximum, swapping them around!.
        /// </summary>
        internal static string cmd_wait_random_min_bigger {
            get {
                return ResourceManager.GetString("cmd.wait.random.min.bigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to write to backup file {0}.
        /// </summary>
        internal static string config_backup_fail {
            get {
                return ResourceManager.GetString("config.backup.fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The color code {1} in {0} is in illegal format and the default value has been restored..
        /// </summary>
        internal static string config_commandsuggestion_illegal_color {
            get {
                return ResourceManager.GetString("config.commandsuggestion.illegal_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings have been loaded from {0}.
        /// </summary>
        internal static string config_load {
            get {
                return ResourceManager.GetString("config.load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load settings:.
        /// </summary>
        internal static string config_load_fail {
            get {
                return ResourceManager.GetString("config.load.fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The language code is invalid!.
        /// </summary>
        internal static string config_Main_Advanced_language_invaild {
            get {
                return ResourceManager.GetString("config.Main.Advanced.language.invaild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current setting is saved as {0}.
        /// </summary>
        internal static string config_saving {
            get {
                return ResourceManager.GetString("config.saving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to write to settings file {0}.
        /// </summary>
        internal static string config_write_fail {
            get {
                return ResourceManager.GetString("config.write.fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color test: Your terminal should display {0}.
        /// </summary>
        internal static string debug_color_test {
            get {
                return ResourceManager.GetString("debug.color_test", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crypto keys &amp; hash generated..
        /// </summary>
        internal static string debug_crypto {
            get {
                return ResourceManager.GetString("debug.crypto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No profile keys could be loaded from disk.
        /// </summary>
        internal static string debug_keys_cache_fail {
            get {
                return ResourceManager.GetString("debug.keys_cache_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile keys has been successfully loaded from disk..
        /// </summary>
        internal static string debug_keys_cache_ok {
            get {
                return ResourceManager.GetString("debug.keys_cache_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performing request to {0}.
        /// </summary>
        internal static string debug_request {
            get {
                return ResourceManager.GetString("debug.request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No sessions could be loaded from disk.
        /// </summary>
        internal static string debug_session_cache_fail {
            get {
                return ResourceManager.GetString("debug.session_cache_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session data has been successfully loaded from disk..
        /// </summary>
        internal static string debug_session_cache_ok {
            get {
                return ResourceManager.GetString("debug.session_cache_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success. (session ID: {0}).
        /// </summary>
        internal static string debug_session_id {
            get {
                return ResourceManager.GetString("debug.session_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bottom slot.
        /// </summary>
        internal static string Enchantment_bottom_slot {
            get {
                return ResourceManager.GetString("Enchantment.bottom_slot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enchantments available.
        /// </summary>
        internal static string Enchantment_enchantments_available {
            get {
                return ResourceManager.GetString("Enchantment.enchantments_available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Levels.
        /// </summary>
        internal static string Enchantment_levels {
            get {
                return ResourceManager.GetString("Enchantment.levels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Middle slot.
        /// </summary>
        internal static string Enchantment_middle_slot {
            get {
                return ResourceManager.GetString("Enchantment.middle_slot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Top slot.
        /// </summary>
        internal static string Enchantment_tops_slot {
            get {
                return ResourceManager.GetString("Enchantment.tops_slot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Got error code from server while refreshing authentication: {0}.
        /// </summary>
        internal static string error_auth {
            get {
                return ResourceManager.GetString("error.auth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to this IP..
        /// </summary>
        internal static string error_connect {
            get {
                return ResourceManager.GetString("error.connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A timeout occured while attempting to connect to this IP..
        /// </summary>
        internal static string error_connection_timeout {
            get {
                return ResourceManager.GetString("error.connection_timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to determine server version..
        /// </summary>
        internal static string error_determine {
            get {
                return ResourceManager.GetString("error.determine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forge Login Handshake did not complete successfully.
        /// </summary>
        internal static string error_forge {
            get {
                return ResourceManager.GetString("error.forge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forge StartEncryption Handshake did not complete successfully.
        /// </summary>
        internal static string error_forge_encrypt {
            get {
                return ResourceManager.GetString("error.forge_encrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot force Forge support for this Minecraft version!.
        /// </summary>
        internal static string error_forgeforce {
            get {
                return ResourceManager.GetString("error.forgeforce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid usage of the generator command!.
        /// </summary>
        internal static string error_generator_invalid {
            get {
                return ResourceManager.GetString("error.generator.invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided path must be a path to a file that is in .json format!.
        /// </summary>
        internal static string error_generator_json {
            get {
                return ResourceManager.GetString("error.generator.json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid data path provided! (The path either does not exists or you have made a typo).
        /// </summary>
        internal static string error_generator_path {
            get {
                return ResourceManager.GetString("error.generator.path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Got error code from server: {0}.
        /// </summary>
        internal static string error_http_code {
            get {
                return ResourceManager.GetString("error.http_code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid response to StartEncryption packet.
        /// </summary>
        internal static string error_invalid_encrypt {
            get {
                return ResourceManager.GetString("error.invalid_encrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid response to Handshake packet.
        /// </summary>
        internal static string error_invalid_response {
            get {
                return ResourceManager.GetString("error.invalid_response", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature requires Inventory Handling to be enabled in order to work!.
        /// </summary>
        internal static string error_inventoryhandling_not_enabled {
            get {
                return ResourceManager.GetString("error.inventoryhandling_not_enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured when attempting to join this server..
        /// </summary>
        internal static string error_join {
            get {
                return ResourceManager.GetString("error.join", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login failed : .
        /// </summary>
        internal static string error_login {
            get {
                return ResourceManager.GetString("error.login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect username/password, blacklisted IP or too many logins..
        /// </summary>
        internal static string error_login_blocked {
            get {
                return ResourceManager.GetString("error.login.blocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User cancelled..
        /// </summary>
        internal static string error_login_cancel {
            get {
                return ResourceManager.GetString("error.login.cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to login to this server..
        /// </summary>
        internal static string error_login_failed {
            get {
                return ResourceManager.GetString("error.login_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account migrated, use e-mail as username..
        /// </summary>
        internal static string error_login_migrated {
            get {
                return ResourceManager.GetString("error.login.migrated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network error..
        /// </summary>
        internal static string error_login_network {
            get {
                return ResourceManager.GetString("error.login.network", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User not premium..
        /// </summary>
        internal static string error_login_premium {
            get {
                return ResourceManager.GetString("error.login.premium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid server response..
        /// </summary>
        internal static string error_login_response {
            get {
                return ResourceManager.GetString("error.login.response", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login servers are unavailable. Please try again later..
        /// </summary>
        internal static string error_login_server {
            get {
                return ResourceManager.GetString("error.login.server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSL Error..
        /// </summary>
        internal static string error_login_ssl {
            get {
                return ResourceManager.GetString("error.login.ssl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Error..
        /// </summary>
        internal static string error_login_unknown {
            get {
                return ResourceManager.GetString("error.login.unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are missing argument {0}.
        /// </summary>
        internal static string error_missing_argument {
            get {
                return ResourceManager.GetString("error.missing.argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server does not report its protocol version, autodetection will not work..
        /// </summary>
        internal static string error_no_version_report {
            get {
                return ResourceManager.GetString("error.no_version_report", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to ping this IP..
        /// </summary>
        internal static string error_ping {
            get {
                return ResourceManager.GetString("error.ping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Realms world does not exist or access was denied.
        /// </summary>
        internal static string error_realms_access_denied {
            get {
                return ResourceManager.GetString("error.realms.access_denied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trying to join a Realms world but Realms support is disabled in config.
        /// </summary>
        internal static string error_realms_disabled {
            get {
                return ResourceManager.GetString("error.realms.disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve the server IP of your Realms world.
        /// </summary>
        internal static string error_realms_ip_error {
            get {
                return ResourceManager.GetString("error.realms.ip_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid or unknown Realms server ID..
        /// </summary>
        internal static string error_realms_server_id {
            get {
                return ResourceManager.GetString("error.realms.server_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Realms server may require some time to start up. Please retry again later..
        /// </summary>
        internal static string error_realms_server_unavailable {
            get {
                return ResourceManager.GetString("error.realms.server_unavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Invalid syntax, expecting --argname=value or --section.argname=value.
        /// </summary>
        internal static string error_setting_argument_syntax {
            get {
                return ResourceManager.GetString("error.setting.argument_syntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature requires Terrain And Movements to be enabled in order to work!.
        /// </summary>
        internal static string error_terrain_not_enabled {
            get {
                return ResourceManager.GetString("error.terrain_not_enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Timeout.
        /// </summary>
        internal static string error_timeout {
            get {
                return ResourceManager.GetString("error.timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected response from the server (is that a Minecraft server?).
        /// </summary>
        internal static string error_unexpect_response {
            get {
                return ResourceManager.GetString("error.unexpect_response", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot connect to the server : This version is not supported !.
        /// </summary>
        internal static string error_unsupported {
            get {
                return ResourceManager.GetString("error.unsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage:.
        /// </summary>
        internal static string error_usage {
            get {
                return ResourceManager.GetString("error.usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server reports a different version than manually set. Login may not work..
        /// </summary>
        internal static string error_version_different {
            get {
                return ResourceManager.GetString("error.version_different", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ChatBot methods should NOT be called in the constructor as API handler is not initialized yet. Override Initialize() or AfterGameJoined() instead to perform initialization tasks..
        /// </summary>
        internal static string exception_chatbot_init {
            get {
                return ResourceManager.GetString("exception.chatbot.init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided script does not have a valid MCCScript header.
        /// </summary>
        internal static string exception_csrunner_invalid_head {
            get {
                return ResourceManager.GetString("exception.csrunner.invalid_head", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to process incoming packet of type {0}. (PacketID: {1}, Protocol: {2}, LoginPhase: {3}, InnerException: {4})..
        /// </summary>
        internal static string exception_packet_process {
            get {
                return ResourceManager.GetString("exception.packet_process", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please update block types handling for this Minecraft version. See Material.cs.
        /// </summary>
        internal static string exception_palette_block {
            get {
                return ResourceManager.GetString("exception.palette.block", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please update entity types handling for this Minecraft version. See EntityType.cs.
        /// </summary>
        internal static string exception_palette_entity {
            get {
                return ResourceManager.GetString("exception.palette.entity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please update health field handling for this Minecraft version..
        /// </summary>
        internal static string exception_palette_healthfield {
            get {
                return ResourceManager.GetString("exception.palette.healthfield", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please update item types handling for this Minecraft version. See ItemType.cs.
        /// </summary>
        internal static string exception_palette_item {
            get {
                return ResourceManager.GetString("exception.palette.item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please update packet type palette for this Minecraft version. See PacketTypePalette.cs.
        /// </summary>
        internal static string exception_palette_packet {
            get {
                return ResourceManager.GetString("exception.palette.packet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown direction.
        /// </summary>
        internal static string exception_unknown_direction {
            get {
                return ResourceManager.GetString("exception.unknown_direction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-initiated logout should be done by calling Disconnect().
        /// </summary>
        internal static string exception_user_logout {
            get {
                return ResourceManager.GetString("exception.user_logout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The protocol version no.{0} is not supported..
        /// </summary>
        internal static string exception_version_unsupport {
            get {
                return ResourceManager.GetString("exception.version_unsupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entities are currently not handled for that MC version..
        /// </summary>
        internal static string extra_entity_disabled {
            get {
                return ResourceManager.GetString("extra.entity_disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enable EntityHandling in the config file first..
        /// </summary>
        internal static string extra_entity_required {
            get {
                return ResourceManager.GetString("extra.entity_required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory # {0} closed..
        /// </summary>
        internal static string extra_inventory_close {
            get {
                return ResourceManager.GetString("extra.inventory_close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventories are currently not handled for that MC version..
        /// </summary>
        internal static string extra_inventory_disabled {
            get {
                return ResourceManager.GetString("extra.inventory_disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory handling is now enabled..
        /// </summary>
        internal static string extra_inventory_enabled {
            get {
                return ResourceManager.GetString("extra.inventory_enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use /inventory to interact with it..
        /// </summary>
        internal static string extra_inventory_interact {
            get {
                return ResourceManager.GetString("extra.inventory_interact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory # {0} opened: {1}.
        /// </summary>
        internal static string extra_inventory_open {
            get {
                return ResourceManager.GetString("extra.inventory_open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enable InventoryHandling in the config file first..
        /// </summary>
        internal static string extra_inventory_required {
            get {
                return ResourceManager.GetString("extra.inventory_required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Terrain &amp; Movements currently not handled for that MC version..
        /// </summary>
        internal static string extra_terrainandmovement_disabled {
            get {
                return ResourceManager.GetString("extra.terrainandmovement_disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Terrain and Movements is now enabled..
        /// </summary>
        internal static string extra_terrainandmovement_enabled {
            get {
                return ResourceManager.GetString("extra.terrainandmovement_enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enable Terrain and Movements in the config file first..
        /// </summary>
        internal static string extra_terrainandmovement_required {
            get {
                return ResourceManager.GetString("extra.terrainandmovement_required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] Failed to initialize FileSystemWatcher, retrying using Polling.
        /// </summary>
        internal static string filemonitor_fail {
            get {
                return ResourceManager.GetString("filemonitor.fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] Initializing FileSystemWatcher for file: {1}.
        /// </summary>
        internal static string filemonitor_init {
            get {
                return ResourceManager.GetString("filemonitor.init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accepting server mod list....
        /// </summary>
        internal static string forge_accept {
            get {
                return ResourceManager.GetString("forge.accept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accepting server registries....
        /// </summary>
        internal static string forge_accept_registry {
            get {
                return ResourceManager.GetString("forge.accept_registry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forge server connection complete!.
        /// </summary>
        internal static string forge_complete {
            get {
                return ResourceManager.GetString("forge.complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acknowledging FML2 Server Config: {0}.
        /// </summary>
        internal static string forge_fml2_config {
            get {
                return ResourceManager.GetString("forge.fml2.config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received FML2 Server Mod List.
        /// </summary>
        internal static string forge_fml2_mod {
            get {
                return ResourceManager.GetString("forge.fml2.mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending back FML2 Client Mod List.
        /// </summary>
        internal static string forge_fml2_mod_send {
            get {
                return ResourceManager.GetString("forge.fml2.mod_send", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acknowledging FML2 Server Registry: {0}.
        /// </summary>
        internal static string forge_fml2_registry {
            get {
                return ResourceManager.GetString("forge.fml2.registry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Got Unknown FML2 Handshake message no. {0}.
        /// </summary>
        internal static string forge_fml2_unknown {
            get {
                return ResourceManager.GetString("forge.fml2.unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring Unknown FML2 LoginMessage channel: {0}.
        /// </summary>
        internal static string forge_fml2_unknown_channel {
            get {
                return ResourceManager.GetString("forge.fml2.unknown_channel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod list:.
        /// </summary>
        internal static string forge_mod_list {
            get {
                return ResourceManager.GetString("forge.mod_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server is running Forge without mods..
        /// </summary>
        internal static string forge_no_mod {
            get {
                return ResourceManager.GetString("forge.no_mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received registry with {0} entries.
        /// </summary>
        internal static string forge_registry {
            get {
                return ResourceManager.GetString("forge.registry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received registry {0} with {1} entries.
        /// </summary>
        internal static string forge_registry_2 {
            get {
                return ResourceManager.GetString("forge.registry_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending falsified mod list to server....
        /// </summary>
        internal static string forge_send_mod {
            get {
                return ResourceManager.GetString("forge.send_mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forge protocol version : {0}.
        /// </summary>
        internal static string forge_version {
            get {
                return ResourceManager.GetString("forge.version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server is running Forge with {0} mods..
        /// </summary>
        internal static string forge_with_mod {
            get {
                return ResourceManager.GetString("forge.with_mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available commands: {0}.
        /// </summary>
        internal static string general_available_cmd {
            get {
                return ResourceManager.GetString("general.available_cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This bot will be unloaded..
        /// </summary>
        internal static string general_bot_unload {
            get {
                return ResourceManager.GetString("general.bot_unload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done.
        /// </summary>
        internal static string general_done {
            get {
                return ResourceManager.GetString("general.done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fail.
        /// </summary>
        internal static string general_fail {
            get {
                return ResourceManager.GetString("general.fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OnInternalCommand: Got error from {0}: {1}.
        /// </summary>
        internal static string icmd_error {
            get {
                return ResourceManager.GetString("icmd.error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to help &lt;cmdname&gt;: show brief help about a command..
        /// </summary>
        internal static string icmd_help {
            get {
                return ResourceManager.GetString("icmd.help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to help &lt;cmdname&gt;. Available commands:
        ///{0}For server help, use &apos;{1}send /help&apos; instead..
        /// </summary>
        internal static string icmd_list {
            get {
                return ResourceManager.GetString("icmd.list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown command &apos;{0}&apos;. Use &apos;help&apos; for command list..
        /// </summary>
        internal static string icmd_unknown {
            get {
                return ResourceManager.GetString("icmd.unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avaliable players:.
        /// </summary>
        internal static string mcc_avaliable_players {
            get {
                return ResourceManager.GetString("mcc.avaliable_players", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The old MinecraftClient.ini has been backed up as {0}.
        /// </summary>
        internal static string mcc_backup_old_config {
            get {
                return ResourceManager.GetString("mcc.backup_old_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste your code here:.
        /// </summary>
        internal static string mcc_browser_login_code {
            get {
                return ResourceManager.GetString("mcc.browser_login_code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your browser should open automatically. If not, open the link below in your browser..
        /// </summary>
        internal static string mcc_browser_open {
            get {
                return ResourceManager.GetString("mcc.browser_open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to {0}....
        /// </summary>
        internal static string mcc_connecting {
            get {
                return ResourceManager.GetString("mcc.connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login failed :.
        /// </summary>
        internal static string mcc_disconnect_login {
            get {
                return ResourceManager.GetString("mcc.disconnect.login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection has been lost..
        /// </summary>
        internal static string mcc_disconnect_lost {
            get {
                return ResourceManager.GetString("mcc.disconnect.lost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnected by Server :.
        /// </summary>
        internal static string mcc_disconnect_server {
            get {
                return ResourceManager.GetString("mcc.disconnect.server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not connected to any server. Use &apos;{0}help&apos; for help..
        /// </summary>
        internal static string mcc_disconnected {
            get {
                return ResourceManager.GetString("mcc.disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching profile key from Microsoft..
        /// </summary>
        internal static string mcc_fetching_key {
            get {
                return ResourceManager.GetString("mcc.fetching_key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking if server is running Forge....
        /// </summary>
        internal static string mcc_forge {
            get {
                return ResourceManager.GetString("mcc.forge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force-enabling Forge support..
        /// </summary>
        internal static string mcc_forgeforce {
            get {
                return ResourceManager.GetString("mcc.forgeforce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found server {0}:{1} for domain {2}.
        /// </summary>
        internal static string mcc_found {
            get {
                return ResourceManager.GetString("mcc.found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New configuration file &quot;{0}&quot; is generated..
        /// </summary>
        internal static string mcc_gen_new_config {
            get {
                return ResourceManager.GetString("mcc.gen_new_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Succesfully generated {0} palette using the dataset: {1}.
        /// </summary>
        internal static string mcc_generator_done {
            get {
                return ResourceManager.GetString("mcc.generator.done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating {0} palette using the dataset: {1}.
        /// </summary>
        internal static string mcc_generator_generating {
            get {
                return ResourceManager.GetString("mcc.generator.generating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handshake successful. (Server ID: {0}).
        /// </summary>
        internal static string mcc_handshake {
            get {
                return ResourceManager.GetString("mcc.handshake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new version of MCC is available and you can download it via /upgrade
        ///Or download it manually: {0}.
        /// </summary>
        internal static string mcc_has_update {
            get {
                return ResourceManager.GetString("mcc.has_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help us translate MCC: {0}.
        /// </summary>
        internal static string mcc_help_us_translate {
            get {
                return ResourceManager.GetString("mcc.help_us_translate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to parse the settings file, enter &quot;{0}new&quot; to generate a new configuration..
        /// </summary>
        internal static string mcc_invaild_config {
            get {
                return ResourceManager.GetString("mcc.invaild_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server IP : .
        /// </summary>
        internal static string mcc_ip {
            get {
                return ResourceManager.GetString("mcc.ip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server was successfully joined.
        ///Type &apos;{0}quit&apos; to leave the server..
        /// </summary>
        internal static string mcc_joined {
            get {
                return ResourceManager.GetString("mcc.joined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link: {0}.
        /// </summary>
        internal static string mcc_link {
            get {
                return ResourceManager.GetString("mcc.link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login :.
        /// </summary>
        internal static string mcc_login {
            get {
                return ResourceManager.GetString("mcc.login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please type the username or email of your choice..
        /// </summary>
        internal static string mcc_login_basic_io {
            get {
                return ResourceManager.GetString("mcc.login_basic_io", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to perform SRV lookup for {0}
        ///{1}: {2}.
        /// </summary>
        internal static string mcc_not_found {
            get {
                return ResourceManager.GetString("mcc.not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You chose to run in offline mode..
        /// </summary>
        internal static string mcc_offline {
            get {
                return ResourceManager.GetString("mcc.offline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please type the password for {0}..
        /// </summary>
        internal static string mcc_password_basic_io {
            get {
                return ResourceManager.GetString("mcc.password_basic_io", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password(invisible): .
        /// </summary>
        internal static string mcc_password_hidden {
            get {
                return ResourceManager.GetString("mcc.password_hidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are dead. Type &apos;{0}respawn&apos; to respawn..
        /// </summary>
        internal static string mcc_player_dead {
            get {
                return ResourceManager.GetString("mcc.player_dead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are dead. Automatically respawning after 1 second..
        /// </summary>
        internal static string mcc_player_dead_respawn {
            get {
                return ResourceManager.GetString("mcc.player_dead_respawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Or press Enter to exit Minecraft Console Client..
        /// </summary>
        internal static string mcc_press_exit {
            get {
                return ResourceManager.GetString("mcc.press_exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cached profile key needs to be refreshed..
        /// </summary>
        internal static string mcc_profile_key_invalid {
            get {
                return ResourceManager.GetString("mcc.profile_key_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cached profile key is still valid for {0}..
        /// </summary>
        internal static string mcc_profile_key_valid {
            get {
                return ResourceManager.GetString("mcc.profile_key_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have access to the following Realms worlds.
        /// </summary>
        internal static string mcc_realms_available {
            get {
                return ResourceManager.GetString("mcc.realms_available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use realms:&lt;index&gt; as server IP to join a Realms world.
        /// </summary>
        internal static string mcc_realms_join {
            get {
                return ResourceManager.GetString("mcc.realms_join", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting 5 seconds ({0} attempts left)....
        /// </summary>
        internal static string mcc_reconnect {
            get {
                return ResourceManager.GetString("mcc.reconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolving {0}....
        /// </summary>
        internal static string mcc_resolve {
            get {
                return ResourceManager.GetString("mcc.resolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restarting Minecraft Console Client....
        /// </summary>
        internal static string mcc_restart {
            get {
                return ResourceManager.GetString("mcc.restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting {0} seconds before restarting....
        /// </summary>
        internal static string mcc_restart_delay {
            get {
                return ResourceManager.GetString("mcc.restart_delay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving Server Info....
        /// </summary>
        internal static string mcc_retrieve {
            get {
                return ResourceManager.GetString("mcc.retrieve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///MCC is running with default settings..
        /// </summary>
        internal static string mcc_run_with_default_settings {
            get {
                return ResourceManager.GetString("mcc.run_with_default_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a player from available players:.
        /// </summary>
        internal static string mcc_select_player {
            get {
                return ResourceManager.GetString("mcc.select_player", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected player:.
        /// </summary>
        internal static string mcc_selected_player {
            get {
                return ResourceManager.GetString("mcc.selected_player", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server is in offline mode..
        /// </summary>
        internal static string mcc_server_offline {
            get {
                return ResourceManager.GetString("mcc.server_offline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server version : {0} (protocol v{1}).
        /// </summary>
        internal static string mcc_server_protocol {
            get {
                return ResourceManager.GetString("mcc.server_protocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server version : .
        /// </summary>
        internal static string mcc_server_version {
            get {
                return ResourceManager.GetString("mcc.server_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking Session....
        /// </summary>
        internal static string mcc_session {
            get {
                return ResourceManager.GetString("mcc.session", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to check session..
        /// </summary>
        internal static string mcc_session_fail {
            get {
                return ResourceManager.GetString("mcc.session_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cached session is invalid or expired..
        /// </summary>
        internal static string mcc_session_invalid {
            get {
                return ResourceManager.GetString("mcc.session_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cached session is still valid for {0}..
        /// </summary>
        internal static string mcc_session_valid {
            get {
                return ResourceManager.GetString("mcc.session_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings file MinecraftClient.ini has been generated..
        /// </summary>
        internal static string mcc_settings_generated {
            get {
                return ResourceManager.GetString("mcc.settings_generated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown or not supported MC version {0}.
        ///Switching to autodetection mode..
        /// </summary>
        internal static string mcc_unknown_version {
            get {
                return ResourceManager.GetString("mcc.unknown_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current version is already up to date or is a development build..
        /// </summary>
        internal static string mcc_update_already_latest {
            get {
                return ResourceManager.GetString("mcc.update.already_latest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for updates has already started..
        /// </summary>
        internal static string mcc_update_already_running {
            get {
                return ResourceManager.GetString("mcc.update.already_running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The download has been cancelled..
        /// </summary>
        internal static string mcc_update_cancel {
            get {
                return ResourceManager.GetString("mcc.update.cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to check for updates from Github, please check your internet connection or enable proxy..
        /// </summary>
        internal static string mcc_update_check_fail {
            get {
                return ResourceManager.GetString("mcc.update.check_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Self-updating: Download is complete, decompressing..
        /// </summary>
        internal static string mcc_update_download_complete {
            get {
                return ResourceManager.GetString("mcc.update.download_complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Self-updating: An error occurred while downloading or saving the file:.
        /// </summary>
        internal static string mcc_update_download_fail {
            get {
                return ResourceManager.GetString("mcc.update.download_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Self-updating: New version detected: &quot;{0}&quot;, download will start soon (platform: {1})..
        /// </summary>
        internal static string mcc_update_exist_update {
            get {
                return ResourceManager.GetString("mcc.update.exist_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The latest release does not contain a build that matches your operating system and CPU architecture..
        /// </summary>
        internal static string mcc_update_platform_not_support {
            get {
                return ResourceManager.GetString("mcc.update.platform_not_support", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Self-updating: {0:00.00}%, ETA {4}, Downloaded {1:00.0}MB of {2:00.0}MB, Avg {3:0.0}KB/s.
        /// </summary>
        internal static string mcc_update_progress {
            get {
                return ResourceManager.GetString("mcc.update.progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Self-updating: Downloaded {0:00.0}MB, Avg {1:0.0}KB/s.
        /// </summary>
        internal static string mcc_update_progress_type2 {
            get {
                return ResourceManager.GetString("mcc.update.progress_type2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add &quot;-f&quot; to force the download..
        /// </summary>
        internal static string mcc_update_promote_force {
            get {
                return ResourceManager.GetString("mcc.update.promote_force", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &quot;--force-upgrade&quot; to force the download..
        /// </summary>
        internal static string mcc_update_promote_force_cmd {
            get {
                return ResourceManager.GetString("mcc.update.promote_force_cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Self-updating: File saved as: {0}.
        /// </summary>
        internal static string mcc_update_save_as {
            get {
                return ResourceManager.GetString("mcc.update.save_as", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start checking for updates..
        /// </summary>
        internal static string mcc_update_start {
            get {
                return ResourceManager.GetString("mcc.update.start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please use the newly generated MinecraftClient.ini.
        /// </summary>
        internal static string mcc_use_new_config {
            get {
                return ResourceManager.GetString("mcc.use_new_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using Minecraft version {0} (protocol v{1}).
        /// </summary>
        internal static string mcc_use_version {
            get {
                return ResourceManager.GetString("mcc.use_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version is supported.
        ///Logging in....
        /// </summary>
        internal static string mcc_version_supported {
            get {
                return ResourceManager.GetString("mcc.version_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , with Forge.
        /// </summary>
        internal static string mcc_with_forge {
            get {
                return ResourceManager.GetString("mcc.with_forge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected to proxy {0}:{1}.
        /// </summary>
        internal static string proxy_connected {
            get {
                return ResourceManager.GetString("proxy.connected", resourceCulture);
            }
        }
    }
}
